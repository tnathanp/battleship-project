{"version":3,"sources":["component/Menu.js","component/Lobby.js","component/Ranking.js","App.js","serviceWorker.js","index.js"],"names":["Menu","Swal","fire","icon","title","text","Navbar","bg","variant","expand","style","borderRadius","Brand","Toggle","aria-controls","Collapse","Nav","Link","href","display","alignItems","marginRight","className","NavDropdown","drop","Item","onClick","hello","React","Component","Lobby","props","state","roomList","friendID","showInviteFriend","showCreateRoom","_type","action","this","setState","e","target","value","list","i","push","Math","floor","random","roomNum","modalInviteFriend","Modal","centered","size","show","Header","Title","Body","Container","Row","Col","Card","Text","Form","Group","Label","Control","onChange","handleFriendID","placeholder","Footer","Button","modalControl","invite","modalCreateRoom","createRoom","width","height","refresh","map","each","roomSelected","Ranking","tier","points","marginTop","Tier","tierText","color","marginBottom","class","Provider","App","paddingTop","backgroundColor","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9e38826.chunk.js","sourcesContent":["import React from 'react';\nimport server from 'socket.io-client';\nimport Swal from 'sweetalert2';\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { RiShoppingCart2Fill, RiShipLine } from 'react-icons/ri';\nimport { AiFillTrophy } from 'react-icons/ai';\nimport { FiSettings } from 'react-icons/fi';\nimport { HiHome } from 'react-icons/hi';\nimport './Menu.css'\n\nclass Menu extends React.Component {\n    hello() {\n        Swal.fire({\n            icon: 'success',\n            title: 'Hello',\n            text: 'Test',\n        })\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ borderRadius: '10px 10px 0 0' }}>\n                <Navbar.Brand><RiShipLine />Eiei Battleship<RiShipLine /></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav>\n                        <Nav.Link href=\"/\">\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <HiHome style={{ marginRight: '5px' }} /> Lobby\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link href=\"/shop\">\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <RiShoppingCart2Fill style={{ marginRight: '5px' }} />  Shop\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link href=\"/rank\">\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <AiFillTrophy style={{ marginRight: '5px' }} />Rank\n                            </div>\n                        </Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <NavDropdown\n                            title={<div style={{ display: 'flex', alignItems: 'center' }}>\n                                <FiSettings style={{ marginRight: '5px' }} />Settings\n                                    </div>}\n                            drop='left'\n                        >\n                            <NavDropdown.Item onClick={() => this.hello()}>Profile</NavDropdown.Item>\n                            <NavDropdown.Item onClick={() => this.hello()}>Background</NavDropdown.Item>\n                            <NavDropdown.Item onClick={() => this.hello()}>Song</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Menu;\n","import React from 'react';\nimport server from 'socket.io-client';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container, Modal, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BsPersonPlusFill, BsFillPlusSquareFill, BsArrowClockwise } from \"react-icons/bs\";\nimport './Lobby.css';\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            roomList: [],\n            friendID: '',\n            showInviteFriend: false,\n            showCreateRoom: false\n        }\n    }\n\n    modalControl(_type, action) {\n        switch (_type) {\n            case 'if':\n                this.setState({ showInviteFriend: action });\n                break;\n            case 'cr':\n                this.setState({ showCreateRoom: action });\n                break;\n        }\n    }\n\n    handleFriendID(e) {\n        this.setState({\n            friendID: e.target.value\n        })\n    }\n\n    createRoom() {\n        //send create room data to server\n    }\n\n    invite() {\n        //send invitation to server\n    }\n\n    refresh() {\n        //get new list from server\n        let list = []\n        for (let i = 0; i < 5; i++) {\n            list.push(Math.floor(Math.random() * 101))\n        }\n        this.setState({\n            roomList: list\n        })\n    }\n\n    roomSelected(roomNum) {\n        //send selected room number to server\n        //start game\n    }\n\n    componentDidMount() {\n        //get list from server\n        let list = [1, 2, 3, 4, 5]\n        this.setState({\n            roomList: list\n        })\n    }\n\n    render() {\n        const modalInviteFriend = (\n            <Modal centered size=\"lg\" show=\"true\">\n                <Modal.Header><Modal.Title>Invite Friend</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            <Form.Group>\n                                <Form.Label>Friend ID</Form.Label>\n                                <Form.Control onChange={e => this.handleFriendID(e)} placeholder=\"Enter your friend's ID\" />\n                            </Form.Group>\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('if', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.invite()}>Save Changes</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        const modalCreateRoom = (\n            <Modal centered size=\"lg\" show=\"true\">\n                <Modal.Header><Modal.Title>CreateRoom</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            WIP\n                            </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('cr', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.createRoom()}>Save Changes</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        return (\n            <Container>\n\n                {this.state.showInviteFriend && modalInviteFriend}\n                {this.state.showCreateRoom && modalCreateRoom}\n\n                <Row>\n                    <Col>\n                        <Card style={{ width: '100%', height: '100%' }}>\n                            <Card.Header>\n                                Room List\n                                <Button className=\"float-right\" variant=\"warning\" size=\"sm\" onClick={() => this.refresh()}><BsArrowClockwise style={{ marginRight: '3px' }} /> refresh</Button>\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {this.state.roomList.map(each => (\n                                        <Card.Link onClick={() => this.roomSelected(each)}><p>{each}</p></Card.Link>)\n                                    )}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer className=\"text-center\">\n\n                                <Button variant=\"primary\" onClick={() => this.modalControl('cr', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsFillPlusSquareFill style={{ marginRight: '10px' }} /> Create Room\n                                    </div>\n                                </Button>\n\n                                {' '}\n\n                                <Button variant=\"info\" onClick={() => this.modalControl('if', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsPersonPlusFill style={{ marginRight: '10px' }} /> Invite Friend\n                                    </div>\n                                </Button>\n\n                            </Card.Footer>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Lobby;\n","import React from 'react';\nimport server from 'socket.io-client';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { IconContext } from 'react-icons';\nimport { RiVipCrownFill } from 'react-icons/ri';\n\nclass Ranking extends React.Component {\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Tier tier=\"1\" points=\"1000\" />\n          <Tier tier=\"2\" points=\"500\" />\n          <Tier tier=\"3\" points=\"100\" />\n\n          <Card className=\"text-center\" style={{ marginTop: '10px' }}>\n            <Card.Body>\n              <Card.Title>Your rank: 123</Card.Title>\n            </Card.Body>\n          </Card>\n\n        </Col>\n        <Col>\n\n          <Card style={{ height: '100%' }}>\n            <Card.Body>\n              <Card.Text>Name</Card.Text>\n            </Card.Body>\n          </Card>\n\n        </Col>\n      </Row>\n    );\n  }\n\n}\n\n/*class Bar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '',\n      height: '',\n      shift: ''\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Card className=\"text-center\" style={{ height: '50px', marginTop: this.state.shift, marginBottom: '5px' }}>\n          <Card.Header>\n            <Card.Title>Name</Card.Title>\n          </Card.Header>\n        </Card>\n        <Card className=\"text-center\" bg={this.state.color} style={{ height: this.state.height }}>\n          <Card.Body>\n            <Card.Text>test</Card.Text>\n          </Card.Body>\n        </Card>\n      </Container>\n    );\n  }\n\n  componentDidMount() {\n    switch (this.props.rank) {\n      case '1':\n        this.setState({\n          color: 'primary',\n          height: '200px'\n        })\n        break;\n\n      case '2':\n        this.setState({\n          color: 'danger',\n          height: '150px',\n          shift: '50px'\n        })\n        break;\n\n      case '3':\n        this.setState({\n          color: 'warning',\n          height: '100px',\n          shift: '100px'\n        })\n        break;\n    }\n  }\n}*/\n\nclass Tier extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tier: '',\n      tierText: '',\n      points: '',\n      color: ''\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: '10px' }}>\n        <div class=\"card-stats card\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <h5 class=\"text-uppercase text-muted mb-0 card-title\">{this.state.tierText}</h5>\n                <span class=\"h5 font-weight-bold mb-0\">{this.state.points} Points</span>\n              </div>\n              <div class=\"col-auto col\">\n                <IconContext.Provider value={{ color: this.state.color, size: '35px' }}>\n                  <div>\n                    <RiVipCrownFill />\n                  </div>\n                </IconContext.Provider>\n              </div>\n            </div>\n            <p class=\"mt-3 mb-0 text-muted text-sm\">\n              <span class=\"text-success mr-2\">3.48%</span>\n              <span class=\"text-nowrap\">Since last month</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    switch (this.props.tier) {\n      case '1':\n        this.setState({\n          tier: '1',\n          tierText: '1st place',\n          points: this.props.points,\n          color: 'gold'\n        })\n        break;\n      case '2':\n        this.setState({\n          tier: '2',\n          tierText: '2nd place',\n          points: this.props.points,\n          color: 'silver'\n        })\n        break;\n      case '3':\n        this.setState({\n          tier: '3',\n          tierText: '3rd place',\n          points: this.props.points,\n          color: '#B87333'\n        })\n        break;\n    }\n  }\n}\n\nexport default Ranking;","import React from 'react';\nimport server from 'socket.io-client';\nimport { Row, Col, Container, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Menu from './component/Menu';\nimport Lobby from './component/Lobby';\nimport Ranking from './component/Ranking';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Container style={{ paddingTop: '2%' }}>\n        <Row>\n          <Col>\n            <Menu />\n            <Card style={{backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px'}}>\n              <Card.Body>\n                <Router>\n                  <Switch>\n                    <Route path=\"/rank\">\n                      <Ranking />\n                    </Route>\n                    <Route path=\"/shop\">\n                      <h1>WIP</h1>\n                    </Route>\n                    <Route path=\"/\">\n                      <Lobby />\n                    </Route>\n                  </Switch>\n                </Router>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}