{"version":3,"sources":["connection.js","component/ProfileChoice.js","component/Menu.js","component/Lobby.js","component/Ranking.js","component/Login.js","component/Game.js","component/Shop.js","component/Admin.js","App.js","serviceWorker.js","index.js"],"names":["socket","server","localStorage","getItem","avatarChoices","row1","slice","row2","ProfileChoice","class","Row","map","pic","Col","Button","variant","onClick","props","currentPic","Image","style","width","height","src","thumbnail","React","Component","backgroundChoices","color","code","Menu","changeProfile","bind","state","redirect","lobby","shop","rank","admin","audio","Audio","user","name","profile","items","missile","glasses","isRefreshModal","showDropDown","showProfileSetting","showProfileChoice","showSongSetting","showBackgroundSetting","dest","this","setState","emit","document","body","backgroundImage","url","data","auth","Swal","fire","title","showConfirmButton","allowOutsideClick","willOpen","showLoading","n","aud","i","length","pause","currentTime","play","loop","removeItem","setItem","icon","timer","then","result","dismiss","DismissReason","close","window","location","reload","on","text","logout","modalProfileChoice","Modal","centered","size","show","backdrop","Header","Title","Body","Container","Card","Text","modalProfileSetting","className","marginLeft","marginRight","Img","Footer","modalSongSetting","onHide","closeButton","controlSong","block","modalBackgroundSetting","backgroundChoice","changeBackground","Navbar","bg","expand","borderRadius","Brand","Toggle","aria-controls","Collapse","Nav","Link","navigate","to","display","alignItems","NavDropdown","handleDropDown","drop","Item","Lobby","roomList","friendID","roomID","showInviteFriend","showCreateRoom","t","action","e","target","value","modalControl","id","req","myAuth","key","invite","createRoom","modalInviteFriend","Form","Group","Label","Control","onChange","handleFriendID","onKeyPress","handleKey","placeholder","modalCreateRoom","handleRoomID","refresh","marginTop","marginBottom","each","joinRoom","Ranking","isLoaded","points","isMe","a","splice","tier","fontSize","ListGroup","item","Tier","tierText","Provider","Login","changePic","form","pass","fieldName","fleldVal","login","clickProfileChoice","logged","md","backgroundColor","InputGroup","Prepend","FormControl","handleChange","type","Game","hovered","secretSong","isFirstGame","Array","fill","enemyData","chat","chatMsg","enemyName","seconds","isUsingMissile","score","enemyScore","isMyTurn","isPause","missileAvai","radarAvai","isPlanningStage","currentShipSize","shipAmount","horizontal","vertical","lastPlaced","controlButton","pos","indexes","shipSize","Math","floor","axis","newData","push","console","log","html","toRemove","pop","newAmount","room","interval","setInterval","tick","msg","getElementById","arr","chatbox","xH","scrollHeight","scrollTo","forceUpdate","send","board","row","elem","column","includes","background","opacity","plan","onMouseEnter","hoverHandle","onMouseLeave","hoveredHandle","game","disabled","cur","clearInterval","you","enemy","status","timerInterval","timerProgressBar","content","getContent","querySelector","textContent","ceil","getTimerLeft","willClose","showDenyButton","confirmButtonText","denyButtonText","isConfirmed","payload","winner","imageUrl","imageWidth","imageHeight","loser","resetState","PlanningStage","paddingTop","minWidth","lg","renderPlanBoard","changeAlign","next","back","GamingStage","frameborder","allowfullscreen","resume","Badge","renderMyBoard","renderEnemyBoard","border","overflowY","handleChat","aria-describedby","Append","Subtitle","equipMissile","useGlasses","cancelMissile","Shop","pocket","missileOwned","glassesOwned","num","fiveShotBuy","glassesBuy","Admin","showRoomID","controlRoomID","Table","responsive","bordered","hover","App","isInGame","joinedRoom","roomName","isAuthenticated","Home","path","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.047500a1.chunk.js","sourcesContent":["import server from 'socket.io-client';\nlet socket = server('35.240.195.51:8080?auth=' + localStorage.getItem('auth'));\nexport default socket;\n","import React from 'react';\nimport { Row, Col, Button, Image } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst avatarChoices = [\n    'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1652945041.9401/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://i.pinimg.com/originals/7f/7c/1d/7f7c1dd0e47c39c330137a7258ae4bec.png',\n    'https://ih1.redbubble.net/image.1667529454.4344/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://ih1.redbubble.net/image.1652885213.4662/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://ih1.redbubble.net/image.1576587976.3410/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1573068447.8364/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1573043479.7857/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n];\n\nlet row1 = avatarChoices.slice(0, 4);\nlet row2 = avatarChoices.slice(4, 8);\n\nclass ProfileChoice extends React.Component {\n    render() {\n        return (\n            <div class=\"text-center\">\n                <Row>\n                    {row1.map(pic => {\n                        return (\n                            <Col>\n                                <Button variant=\"light\" onClick={() => this.props.currentPic(pic)}>\n                                    <Image style={{ width: '80px', height: '80px' }} src={pic} thumbnail />\n                                </Button>\n                            </Col>\n                        );\n                    })}\n                </Row>\n                <Row>\n                    {row2.map(pic => {\n                        return (\n                            <Col>\n                                <Button variant=\"light\" onClick={() => this.props.currentPic(pic)}>\n                                    <Image style={{ width: '80px', height: '80px' }} src={pic} thumbnail />\n                                </Button>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ProfileChoice;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Navbar, NavDropdown, Nav, Button, Modal, Card, Row, Col, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { RiShoppingCart2Fill, RiShipLine, RiAdminFill } from 'react-icons/ri';\nimport { AiFillTrophy } from 'react-icons/ai';\nimport { FiSettings } from 'react-icons/fi';\nimport { HiHome } from 'react-icons/hi';\nimport { MdExitToApp } from 'react-icons/md';\nimport { BiGlasses } from 'react-icons/bi';\nimport { IoIosRocket } from 'react-icons/io';\nimport ProfileChoice from './ProfileChoice';\nimport './Menu.css';\n\nconst backgroundChoices = [\n    { color: 'Serenity & Rose quartz', code: 'linear-gradient(0deg, #f7cac9 0%, #b3cee5 100%)' },\n    { color: 'Candy', code: 'linear-gradient(43deg, #4158D0 0%, #C850C0 51%, #FFCC70 100%)' },\n    { color: 'Midnight', code: 'linear-gradient(225deg, #FF3CAC 0%, #784BA0 50%, #2B86C5 100%)' },\n    { color: 'Nature', code: 'linear-gradient(132deg, #F4D03F 0%, #16A085 100%)' }\n];\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.changeProfile = this.changeProfile.bind(this);\n        this.state = {\n            redirect: {\n                lobby: false,\n                shop: false,\n                rank: false,\n                admin: false\n            },\n            audio: [\n                new Audio('/Pirates Of The Caribbean Theme Song.mp3'),\n                new Audio('/Coffin Dance (Official Music Video HD).mp3'),\n                new Audio('/Mii Channel Music.mp3')\n            ],\n            user: {\n                name: '',\n                profile: '',\n                items: {\n                    missile: 0,\n                    glasses: 0\n                }\n            },\n            isRefreshModal: false,\n            showDropDown: false,\n            showProfileSetting: false,\n            showProfileChoice: false,\n            showSongSetting: false,\n            showBackgroundSetting: false\n        }\n    }\n\n    navigate(dest) {\n        this.setState({\n            redirect: {\n                lobby: dest === 'lobby',\n                shop: dest === 'shop',\n                rank: dest === 'rank',\n                admin: dest === 'admin'\n            }\n        })\n    }\n\n    handleDropDown() {\n        if (this.state.showProfileSetting === true ||\n            this.state.showSongSetting === true ||\n            this.state.showBackgroundSetting === true) {\n\n            return false\n        }\n\n        socket.emit('request user data', localStorage.getItem('auth'));\n\n        this.setState({ showDropDown: !this.state.showDropDown })\n    }\n\n    showProfileSetting() {\n        this.setState({ showProfileSetting: !this.state.showProfileSetting });\n    }\n\n    showBackgroundSetting() {\n        this.setState({ showBackgroundSetting: !this.state.showBackgroundSetting });\n    }\n\n    changeBackground(color) {\n        document.body.style.backgroundImage = color;\n    }\n\n    showProfileChoice() {\n        this.setState({ showProfileChoice: !this.state.showProfileChoice });\n    }\n\n    changeProfile(url) {\n        this.setState({\n            isRefreshModal: true\n        })\n        let data = {\n            auth: localStorage.getItem('auth'),\n            url: url\n        }\n        socket.emit('change profile', data);\n        Swal.fire({\n            title: 'Loading',\n            showConfirmButton: false,\n            allowOutsideClick: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        })\n        this.showProfileChoice();\n        this.showProfileSetting();\n    }\n\n    showSongSetting() {\n        this.setState({ showSongSetting: !this.state.showSongSetting });\n    }\n\n    showBackgroundSetting() {\n        this.setState({ showBackgroundSetting: !this.state.showBackgroundSetting });\n    }\n\n    changeBackground(color) {\n        document.body.style.backgroundImage = color;\n    }\n\n    controlSong(n) {\n        let aud = this.state.audio;\n        for (let i = 0; i < aud.length; i++) {\n            aud[i].pause();\n            aud[i].currentTime = 0;\n            if (i === n) {\n                aud[i].play();\n                aud[i].loop = true;\n            }\n        }\n    }\n\n    logout() {\n        localStorage.removeItem('isLogin');\n        localStorage.setItem('isLogin', false);\n        socket.emit('offline', localStorage.getItem('auth'));\n        localStorage.removeItem('auth');\n        Swal.fire({\n            title: 'Successfully logged out',\n            icon: 'success',\n            showConfirmButton: false,\n            allowOutsideClick: false,\n            timer: 1000\n        }).then((result) => {\n            if (result.dismiss === Swal.DismissReason.timer) {\n                Swal.close();\n                window.location.reload(false);\n            }\n        });\n    }\n\n    componentDidMount() {\n        socket.on('response user data', data => {\n            this.setState({\n                user: {\n                    name: data.user,\n                    profile: data.profile,\n                    items: {\n                        missile: data.items.missile,\n                        glasses: data.items.glasses\n                    }\n                }\n            })\n            if (this.state.isRefreshModal === true) {\n                Swal.close();\n                this.showProfileSetting();\n                this.setState({ isRefreshModal: false });\n            }\n        })\n\n        socket.on('success change profile', () => {\n            socket.emit('request user data', localStorage.getItem('auth'));\n        })\n\n        socket.on('get kicked', () => {\n            Swal.fire({\n                title: 'Get kicked',\n                text: 'You get kicked from the admin',\n                timer: 2000,\n                icon: 'warning',\n                showConfirmButton: false,\n                allowOutsideClick: false\n            }).then(result => {\n                Swal.close();\n                this.logout();\n            })\n        })\n\n    }\n\n    render() {\n\n        const modalProfileChoice = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Choose Profile Picture</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <ProfileChoice currentPic={this.changeProfile} />\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        const modalProfileSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Your profile</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Row className=\"text-center\">\n                        <Card style={{ width: '15rem', marginLeft: 'auto', marginRight: 'auto' }}>\n                            <Card.Img variant=\"top\" src={this.state.user.profile} />\n                            <Card.Body>\n                                <Row className=\"justify-content-md-center\">\n                                    <Card.Title style={{ marginLeft: 'auto', marginRight: 'auto' }}>{this.state.user.name}</Card.Title>\n                                </Row>\n                                <Card>\n                                    <Card.Header>\n                                        <Row className=\"justify-content-md-center\">\n                                            <Card.Title style={{ marginLeft: 'auto', marginRight: 'auto' }}>Inventory</Card.Title>\n                                        </Row>\n                                        <Row className=\"justify-content-md-center\">\n                                            <Col>\n                                                <IoIosRocket /> : {this.state.user.items.missile}\n                                            </Col>\n                                            <Col>\n                                                <BiGlasses /> : {this.state.user.items.glasses}\n                                            </Col>\n                                        </Row>\n                                    </Card.Header>\n                                </Card>\n                            </Card.Body>\n                        </Card>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={() => this.showProfileChoice()}>Change picture</Button>\n                    <Button variant=\"secondary\" onClick={() => this.showProfileSetting()}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        const modalSongSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\" onHide={() => this.showSongSetting()}>\n                <Modal.Header closeButton><Modal.Title>Song Setting</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Body><Card.Text>\n                        <Button variant=\"light\" onClick={() => this.controlSong(0)} block>Agressive</Button>\n                        <Button variant=\"light\" onClick={() => this.controlSong(1)} block>Dance</Button>\n                        <Button variant=\"light\" onClick={() => this.controlSong(2)} block>Chill</Button>\n                        <Button variant=\"dark\" onClick={() => this.controlSong(3)} block>Turn Off</Button>\n                    </Card.Text></Card.Body></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        const modalBackgroundSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\" onHide={() => this.showBackgroundSetting()}>\n                <Modal.Header closeButton><Modal.Title>Background Setting</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Body><Card.Text>\n                        {backgroundChoices.map(backgroundChoice => {\n                            return (\n                                <Button block variant=\"info\" onClick={() => this.changeBackground(backgroundChoice.code)}>\n                                    {backgroundChoice.color}\n                                </Button>\n                            );\n                        })}\n                    </Card.Text></Card.Body></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ borderRadius: '10px 10px 0 0' }}>\n                <Navbar.Brand><RiShipLine />Eiei Battleship<RiShipLine /></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav>\n                        <Nav.Link onClick={() => this.navigate('lobby')}>\n                            {this.state.redirect.lobby && (<Redirect to='/' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <HiHome style={{ marginRight: '5px' }} /> Lobby\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('shop')}>\n                            {this.state.redirect.shop && (<Redirect to='/shop' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <RiShoppingCart2Fill style={{ marginRight: '5px' }} />  Shop\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('rank')}>\n                            {this.state.redirect.rank && (<Redirect to='/rank' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <AiFillTrophy style={{ marginRight: '5px' }} />Rank\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('admin')}>\n                            {this.state.redirect.admin && (<Redirect to='/admin' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <RiAdminFill style={{ marginRight: '5px' }} />Admin\n                            </div>\n                        </Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <NavDropdown\n                            show={this.state.showDropDown}\n                            onClick={() => this.handleDropDown()}\n                            title={<div style={{ display: 'flex', alignItems: 'center' }}>\n                                <FiSettings style={{ marginRight: '5px' }} />Settings\n                                    </div>}\n                            drop='left'\n                        >\n                            <NavDropdown.Item onClick={() => this.showProfileSetting()}>Profile</NavDropdown.Item>\n                            {this.state.showProfileSetting && modalProfileSetting}\n                            {this.state.showProfileChoice && modalProfileChoice}\n                            <NavDropdown.Item onClick={() => this.showBackgroundSetting()}>Background</NavDropdown.Item>\n                            {this.state.showBackgroundSetting && modalBackgroundSetting}\n                            <NavDropdown.Item onClick={() => this.showSongSetting()}>Song</NavDropdown.Item>\n                            {this.state.showSongSetting && modalSongSetting}\n                            <NavDropdown.Item onClick={() => this.logout()}>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <MdExitToApp style={{ marginRight: '5px' }} />Logout\n                                </div>\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Menu;\n","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container, Modal, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BsPersonPlusFill, BsFillPlusSquareFill, BsArrowClockwise } from \"react-icons/bs\";\nimport './Lobby.css';\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            roomList: [],\n            friendID: '',\n            roomID: '',\n            showInviteFriend: false,\n            showCreateRoom: false\n        }\n    }\n\n    modalControl(t, action) {\n        switch (t) {\n            case 'if':\n                this.setState({ showInviteFriend: action });\n                break;\n            case 'cr':\n                this.setState({ showCreateRoom: action });\n                break;\n        }\n    }\n\n    handleFriendID(e) {\n        this.setState({\n            friendID: e.target.value\n        })\n    }\n\n    handleRoomID(e) {\n        this.setState({\n            roomID: e.target.value\n        })\n    }\n\n    createRoom() {\n        this.modalControl('cr', false);\n        socket.emit('create room', this.state.roomID);\n    }\n\n    joinRoom(id) {\n        socket.emit('join room', id);\n    }\n\n    invite() {\n        this.modalControl('if', false);\n        let req = {\n            id: this.state.friendID,\n            myAuth: localStorage.getItem('auth')\n        }\n        socket.emit('invite friend', req);\n    }\n\n    refresh() {\n        socket.emit('get room list');\n    }\n\n    handleKey(e, t) {\n        if (e.key === 'Enter') {\n            if (t === 'if') {\n                this.invite();\n            } else if (t === 'cr') {\n                this.createRoom();\n            }\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('get room list');\n\n        socket.on('success create room', id => {\n            Swal.fire({\n                title: 'Waiting for the opponent',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading();\n                }\n            })\n        })\n\n        socket.on('friend id not found', () => {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops',\n                text: \"Friend's ID not found\"\n            })\n        })\n\n        socket.on('friend already in a room', () => {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops',\n                text: \"Your friend is currently in a room\"\n            })\n        })\n\n        socket.on('room id already exist', () => {\n            Swal.fire({\n                title: 'Room name already exists',\n                icon: 'error'\n            })\n        })\n\n        socket.on('update room list', data => {\n            this.setState({\n                roomList: data\n            })\n        })\n\n    }\n\n    render() {\n        const modalInviteFriend = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Invite Friend</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            <Form.Group>\n                                <Form.Label>Friend ID</Form.Label>\n                                <Form.Control onChange={e => this.handleFriendID(e)} onKeyPress={e => this.handleKey(e, 'if')} placeholder=\"Enter your friend's ID\" />\n                            </Form.Group>\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('if', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.invite()}>Send Invitation</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        const modalCreateRoom = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Create Room</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            Room name\n                        <Form.Control onChange={e => this.handleRoomID(e)} onKeyPress={e => this.handleKey(e, 'cr')} placeholder=\"Enter room name\" />\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('cr', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.createRoom()}>Create</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <Card style={{ width: '100%', height: '100%' }}>\n                            <Card.Header>\n                                Room List\n                                <Button className=\"float-right\" variant=\"warning\" size=\"sm\" onClick={() => this.refresh()}><BsArrowClockwise style={{ marginRight: '3px' }} /> refresh</Button>\n                            </Card.Header>\n                            <Card.Body class=\"text-center\">\n                                <Card.Text>\n                                    {this.state.roomList.length === 0 ? (<Card.Text style={{ marginTop: '20px', marginBottom: '20px' }}>No available room</Card.Text>) : false}\n                                    {this.state.roomList.map(each => (\n                                        <Button block variant=\"light\" onClick={() => this.joinRoom(each.roomID)}>{each.roomID}</Button>)\n                                    )}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer className=\"text-center\">\n\n                                <Button variant=\"primary\" onClick={() => this.modalControl('cr', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsFillPlusSquareFill style={{ marginRight: '10px' }} /> Create Room\n                                    </div>\n                                </Button>\n\n                                {' '}\n\n                                <Button variant=\"info\" onClick={() => this.modalControl('if', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsPersonPlusFill style={{ marginRight: '10px' }} /> Invite Friend\n                                    </div>\n                                </Button>\n\n                                {this.state.showInviteFriend && modalInviteFriend}\n                                {this.state.showCreateRoom && modalCreateRoom}\n\n                            </Card.Footer>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Lobby;\n","import React from 'react';\nimport socket from '../connection';\nimport { Row, Col, Card, Container, ListGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { IconContext } from 'react-icons';\nimport { RiVipCrownFill } from 'react-icons/ri';\nimport Swal from 'sweetalert2';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    socket.emit('request rank data', localStorage.getItem('auth'));\n\n    socket.on('response rank data', data => {\n      this.setState({\n        data: data,\n        isLoaded: true\n      })\n    })\n  }\n\n  render() {\n    let result;\n    if (this.state.isLoaded === false) {\n      Swal.fire({\n        title: 'Loading',\n        allowOutsideClick: false,\n        showConfirmButton: false,\n        willOpen: () => {\n          Swal.showLoading()\n        }\n      })\n    } else {\n      let rank = 0;\n      let points = 0;\n      for (let i = 0; i < this.state.data.length; i++) {\n        if (this.state.data[i].isMe === true) {\n          rank = this.state.data[i].rank\n          points = this.state.data[i].points\n        }\n      }\n      let a = [];\n      for (let i = 3; i < this.state.data.length; i++) {\n        a.splice(i - 3, 0, this.state.data[i]);\n      }\n      Swal.close();\n      result = (\n        <Row>\n          <Col>\n\n            <Tier tier=\"1\" points={this.state.data[0].points} name={this.state.data[0].name} />\n            <Tier tier=\"2\" points={this.state.data[1].points} name={this.state.data[1].name} />\n            <Tier tier=\"3\" points={this.state.data[2].points} name={this.state.data[2].name} />\n\n            <Card className=\"text-center\" style={{ marginTop: '10px' }}>\n              <Card.Body>\n                <Row>\n                  <Col>\n                    Your points\n                    <Card.Text style={{ fontSize: '25px' }}>{points}</Card.Text>\n                  </Col>\n                  <Col>\n                    Your rank\n                    <Card.Text style={{ fontSize: '25px' }}>{rank}</Card.Text>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n\n          </Col>\n          <Col>\n\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Text>\n                  <ListGroup>\n                    {\n                      a.map((item, i) => {\n                        return (\n                          <ListGroup.Item key={i}>\n                            <Row>\n                              <Col>\n                                <h6 class=\"text-uppercase text-muted mb-0 card-title\">Rank: {item.rank}</h6>\n                                <h6 >{item.name}</h6>\n                              </Col>\n                              <Col>\n                                <h6 style={{ marginTop: '20px' }}>{item.points} Points</h6>\n                              </Col>\n                            </Row>\n                          </ListGroup.Item>\n                        )\n                      })\n                    }\n                  </ListGroup>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n\n          </Col>\n        </Row>\n      );\n    }\n\n    return (\n      <Container>\n        {result}\n      </Container>\n    );\n  }\n\n}\n\nclass Tier extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tier: '',\n      tierText: '',\n      points: '',\n      color: ''\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: '10px' }}>\n        <div class=\"card-stats card\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <h5 class=\"text-uppercase text-muted mb-0 card-title\">{this.state.tierText}</h5>\n                <span class=\"h5 font-weight-bold mb-0\">{this.props.name}</span>\n              </div>\n              <div class=\"col-auto col\">\n                <IconContext.Provider value={{ color: this.state.color, size: '35px' }}>\n                  <div>\n                    <RiVipCrownFill />\n                  </div>\n                </IconContext.Provider>\n              </div>\n            </div>\n            <p class=\"mt-3 mb-0 text-muted text-sm\">\n              <span class=\"text-success mr-2\">{this.props.points} Points</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    switch (this.props.tier) {\n      case '1':\n        this.setState({\n          tier: '1',\n          tierText: '1st place',\n          points: this.props.points,\n          color: 'gold'\n        })\n        break;\n      case '2':\n        this.setState({\n          tier: '2',\n          tierText: '2nd place',\n          points: this.props.points,\n          color: 'silver'\n        })\n        break;\n      case '3':\n        this.setState({\n          tier: '3',\n          tierText: '3rd place',\n          points: this.props.points,\n          color: '#B87333'\n        })\n        break;\n    }\n  }\n}\n\nexport default Ranking;","import React from 'react';\nimport socket from '../connection';\nimport { Image, Row, Col, Container, FormControl, InputGroup, Button, Modal, Card } from 'react-bootstrap';\nimport { BsFillPersonFill, BsFillLockFill } from 'react-icons/bs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Swal from 'sweetalert2';\nimport ProfileChoice from './ProfileChoice';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changePic = this.changePic.bind(this);\n    this.state = {\n      form: {\n        user: '',\n        pass: '',\n        profile: 'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n      },\n      showProfileChoice: false\n    }\n  }\n\n  handleChange(e) {\n    let fieldName = e.target.name;\n    let fleldVal = e.target.value;\n    this.setState({ form: { ...this.state.form, [fieldName]: fleldVal } })\n  }\n\n  handleKey(e) {\n    if (e.key === 'Enter') {\n      this.login();\n    }\n  }\n\n  login() {\n    if (this.state.form.user === '' || this.state.form.pass === '') {\n      Swal.fire({\n        title: 'Empty field',\n        icon: 'error'\n      });\n      localStorage.setItem('isLogin', false);\n    } else {\n      Swal.fire({\n        title: 'Loading',\n        allowOutsideClick: false,\n        willOpen: () => {\n          Swal.showLoading()\n        }\n      })\n      socket.emit('login', this.state.form);\n    }\n  }\n\n  clickProfileChoice() {\n    this.setState({ showProfileChoice: !this.state.showProfileChoice })\n  }\n\n  changePic(url) {\n    this.setState({\n      form: {\n        user: this.state.form.user,\n        pass: this.state.form.pass,\n        profile: url\n      }\n    });\n    this.clickProfileChoice();\n  }\n\n  componentDidMount() {\n    socket.on('success login', auth => {\n      Swal.close();\n      localStorage.removeItem('auth');\n      localStorage.setItem('auth', auth);\n      localStorage.removeItem('isLogin');\n      localStorage.setItem('isLogin', true);\n      this.props.logged(this.state.form.user);\n    });\n\n    socket.on('fail login', () => {\n      Swal.close();\n      Swal.fire({\n        title: 'Failed',\n        text: 'Wrong username or password',\n        icon: 'error'\n      });\n      localStorage.setItem('isLogin', false);\n    })\n\n  }\n\n  render() {\n    const modalProfileChoice = (\n      <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n        <Modal.Header><Modal.Title>Choose Profile Picture</Modal.Title></Modal.Header>\n        <Modal.Body>\n          <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n            <ProfileChoice currentPic={this.changePic} />\n          </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n        </Modal.Body>\n      </Modal>\n    );\n\n    return (\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col></Col>\n          <Col md={6}>\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '10px' }}>\n              <div class=\"text-center\">\n                <Card.Body>\n\n                  <Image style={{ width: '100%', marginBottom: '-30px' }} src=\"https://www.tgpl.in.th/wp-content/uploads/2016/01/battleship.png\" />\n\n                  <h1>Eiei Battleship</h1>\n\n                </Card.Body>\n                <Card.Footer>\n                  <Row>\n                    <Col md={4}>\n\n                      <Button variant=\"outline-secondary\" size=\"sm\" style={{ marginBottom: '20px' }} onClick={() => this.clickProfileChoice()}>\n                        <Image style={{ width: '80px', height: '80px', marginTop: '5px', marginBottom: '5px' }} src={this.state.form.profile} thumbnail />\n                      </Button>\n                      {this.state.showProfileChoice && modalProfileChoice}\n\n                    </Col>\n                    <Col>\n\n                      <InputGroup className=\"mb-3\" style={{ marginTop: '10px' }}>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <BsFillPersonFill />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl name=\"user\" placeholder=\"Username\" size=\"md\" onChange={e => this.handleChange(e)} />\n                      </InputGroup>\n\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <BsFillLockFill />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl name=\"pass\" type=\"password\" placeholder=\"Password\" onChange={e => this.handleChange(e)} onKeyPress={e => this.handleKey(e)} />\n                      </InputGroup>\n                    </Col>\n                  </Row>\n                  <Button block variant=\"success\" onClick={() => this.login()}>Login</Button>\n                </Card.Footer>\n              </div>\n            </Card>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport socket from '../connection';\nimport { Row, Col, Container, Card, Navbar, Nav, Button, InputGroup, FormControl, Badge } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Swal from 'sweetalert2';\nimport { BsFillPauseFill, BsFillPlayFill } from 'react-icons/bs';\nimport { IoIosRocket } from 'react-icons/io';\nimport { BiGlasses, BiTargetLock } from 'react-icons/bi';\nimport { TiWaves } from 'react-icons/ti';\n\nimport './Game.css';\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            //Shared things\n            hovered: [],\n            secretSong: false,\n            isFirstGame: true,\n            //Data\n            data: new Array(64).fill(0),\n            enemyData: new Array(64).fill(0),\n            //Gaming things\n            chat: [],\n            chatMsg: '',\n            name: '',\n            enemyName: '',\n            seconds: 10,\n            isUsingMissile: false,\n            score: 0,\n            enemyScore: 0,\n            isMyTurn: false,\n            isPause: false,\n            missileAvai: 0,\n            radarAvai: 0,\n            audio: [\n                new Audio('/explode.mp3'),\n                new Audio('/missile.mp3'),\n                new Audio('/radar.mp3'),\n                new Audio('/win.mp3'),\n                new Audio('/lose.mp3')\n            ],\n            //Planning things\n            isPlanningStage: true,\n            currentShipSize: 4,\n            shipAmount: 1,\n            horizontal: true,\n            vertical: false,\n            lastPlaced: [],\n            controlButton: false\n        }\n    }\n\n    hoverHandle(pos) {\n        let shipSize = this.state.currentShipSize;\n        if (this.state.isPlanningStage) {\n            if (this.state.horizontal) {\n                if (pos % 8 + shipSize < 9) {\n                    let indexes = new Array(shipSize).fill(pos);\n                    let n = 0;\n                    indexes = indexes.map(each => {\n                        n++;\n                        return each + n - 1;\n                    })\n                    this.setState({\n                        hovered: indexes\n                    })\n                }\n            } else if (this.state.vertical) {\n                if (Math.floor(pos / 8) + shipSize < 9) {\n                    let indexes = new Array(shipSize).fill(pos);\n                    let n = 0;\n                    indexes = indexes.map(each => {\n                        n++;\n                        return each + 8 * (n - 1);\n                    })\n                    this.setState({\n                        hovered: indexes\n                    })\n                }\n            }\n        } else {\n            let indexes;\n            if (this.state.isUsingMissile) {\n                if (pos <= 6 && pos >= 0) {\n                    indexes = [pos - 1, pos, pos + 1, pos + 8];\n                } else if (pos >= 57 && pos <= 63) {\n                    indexes = [pos - 8, pos - 1, pos, pos + 1];\n                } else if (pos % 8 === 0) {\n                    indexes = [pos - 8, pos, pos + 1, pos + 8];\n                } else if ((pos + 1) % 8 === 0) {\n                    indexes = [pos - 8, pos - 1, pos, pos + 8];\n                } else {\n                    indexes = [pos - 8, pos - 1, pos, pos + 1, pos + 8];\n                }\n            } else {\n                indexes = [pos];\n            }\n            this.setState({\n                hovered: indexes\n            })\n        }\n    }\n\n    hoveredHandle(pos) {\n        this.setState({\n            hovered: []\n        })\n    }\n\n    changeAlign(axis) {\n        if (axis === 'hori') {\n            this.setState({\n                horizontal: true,\n                vertical: false\n            })\n        } else if (axis === 'vert') {\n            this.setState({\n                horizontal: false,\n                vertical: true\n            })\n        }\n    }\n\n    fill(pos, size, axis) {\n        let result = false;\n        if (axis === 'hori') {\n            //Horizontal\n\n            //Check if available\n            for (let i = pos; i < pos + size; i++) {\n                if (this.state.data[i] === 1) {\n                    return result\n                }\n            }\n            //Fill data with ship\n            let newData = this.state.data.slice();\n            for (let i = pos; i < pos + size; i++) {\n                newData[i] = 1;\n            }\n            this.setState({\n                data: newData\n            })\n            this.state.lastPlaced.push({ pos: pos, size: size, axis: 'hori' });\n            this.setState({\n                controlButton: this.state.lastPlaced.length !== 0\n            })\n            return true\n\n        } else if (axis === 'vert') {\n            //Vertical\n\n            //Check if available\n            for (let i = 0; i < size; i++) {\n                if (this.state.data[pos + 8 * i] === 1) {\n                    return result\n                }\n            }\n            //Fill data with ship\n            let newData = this.state.data.slice();\n            for (let i = 0; i < size; i++) {\n                newData[pos + 8 * i] = 1;\n            }\n            this.setState({\n                data: newData\n            })\n            this.state.lastPlaced.push({ pos: pos, size: size, axis: 'vert' });\n            this.setState({\n                controlButton: this.state.lastPlaced.length !== 0\n            })\n            return true\n\n        }\n    }\n\n    plan(pos) {\n        if (this.state.shipAmount !== 0) {\n            let shipSize = this.state.currentShipSize;\n            if (this.state.horizontal) {\n                if (pos % 8 + shipSize < 9) {\n                    if (this.fill(pos, shipSize, 'hori')) {\n                        console.log('Done');\n                        this.setState({\n                            shipAmount: this.state.shipAmount - 1\n                        })\n                    } else {\n                        console.log('Unable');\n                    }\n                }\n            } else if (this.state.vertical) {\n                if (this.fill(pos, shipSize, 'vert')) {\n                    console.log('Done');\n                    this.setState({\n                        shipAmount: this.state.shipAmount - 1\n                    })\n                } else {\n                    console.log('Unable');\n                }\n            }\n        } else {\n            Swal.fire({\n                html: 'You have no available ship left for size <b>' + this.state.currentShipSize + '</b>',\n                icon: 'warning'\n            })\n        }\n    }\n\n    back() {\n        let toRemove = this.state.lastPlaced.pop();\n        let pos = toRemove.pos;\n        let size = toRemove.size;\n        if (toRemove.axis === 'hori') {\n            let newData = this.state.data.slice();\n            for (let i = pos; i < pos + size; i++) {\n                newData[i] = 0;\n            }\n            this.setState({\n                data: newData,\n                shipAmount: this.state.shipAmount + 1\n            })\n        } else if (toRemove.axis === 'vert') {\n            let newData = this.state.data.slice();\n            for (let i = 0; i < size; i++) {\n                newData[pos + 8 * i] = 0;\n            }\n            this.setState({\n                data: newData,\n                shipAmount: this.state.shipAmount + 1\n            })\n        }\n        this.setState({\n            controlButton: this.state.lastPlaced.length !== 0\n        })\n    }\n\n    next() {\n        let shipSize = this.state.currentShipSize;\n        if (this.state.shipAmount === 0 && this.state.currentShipSize !== 1) {\n            let newAmount = 0;\n            if (shipSize === 4) newAmount = 2;\n            else if (shipSize === 3) newAmount = 3;\n            else if (shipSize === 2) newAmount = 4;\n            this.setState({\n                currentShipSize: shipSize - 1,\n                shipAmount: newAmount,\n                controlButton: false,\n                lastPlaced: []\n            })\n        } else {\n            if (this.state.currentShipSize === 1 && this.state.shipAmount === 0) {\n                socket.emit('send ship data', { data: this.state.data, auth: localStorage.getItem('auth'), isFirstGame: this.state.isFirstGame, room: this.props.room });\n                Swal.fire({\n                    title: 'Waiting for the opponent',\n                    allowOutsideClick: false,\n                    showConfirmButton: false,\n                    willOpen: () => {\n                        Swal.showLoading();\n                    }\n                })\n            } else {\n                Swal.fire({\n                    html: 'You have <b>' + this.state.shipAmount + '</b> ship left to be placed',\n                    icon: 'warning'\n                })\n            }\n        }\n    }\n\n    game(pos) {\n        let posCond = this.state.enemyData[pos] === 0 || this.state.enemyData[pos] === 8 || this.state.enemyData[pos] === 9;\n        if (posCond && this.state.isMyTurn) {\n            socket.emit('shot', {\n                target: this.state.isUsingMissile ? this.state.hovered : [pos],\n                missile: this.state.isUsingMissile,\n                room: this.props.room,\n                auth: localStorage.getItem('auth')\n            });\n            if (this.state.isUsingMissile) {\n                this.setState({\n                    missileAvai: 0,\n                    isUsingMissile: false\n                })\n                this.state.audio[1].currentTime = 0;\n                this.state.audio[1].play();\n            } else {\n                this.state.audio[0].currentTime = 0;\n                this.state.audio[0].play();\n            }\n        }\n    }\n\n    pause() {\n        Swal.fire({\n            title: 'Waiting for opponent decision',\n            allowOutsideClick: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        })\n        socket.emit('pause request', { name: this.state.name, room: this.props.room });\n    }\n\n    resume() {\n        if (this.state.isMyTurn) {\n            this.interval = setInterval(() => this.tick(), 1000);\n        }\n        this.setState({\n            isPause: false\n        })\n        socket.emit('resume game', this.props.room);\n    }\n\n    handleChat(e) {\n        this.setState({\n            chatMsg: e.target.value\n        })\n    }\n\n    send() {\n        if (this.state.chatMsg !== '') {\n            socket.emit('send chat', { name: this.state.name, msg: this.state.chatMsg, room: this.props.room });\n            let chatInput = document.getElementById('chat-input');\n            chatInput.value = '';\n            let arr = this.state.chat.slice();\n            arr.push(this.state.name + ': ' + this.state.chatMsg);\n            this.setState({\n                chat: arr\n            }, () => {\n                let chatbox = document.getElementById(\"chat-box\");\n                var xH = chatbox.scrollHeight;\n                chatbox.scrollTo(0, xH);\n                this.setState({\n                    chatMsg: ''\n                })\n            })\n            this.forceUpdate();\n        }\n    }\n\n    handleKey(e) {\n        if (e.key === 'Enter') {\n            if (this.state.chatMsg !== '') { this.send(); }\n        }\n    }\n\n    renderPlanBoard() {\n        let board = []\n        for (let row = 1; row <= 8; row++) {\n            let elem = []\n            for (let column = 1; column <= 8; column++) {\n                let pos = 8 * (row - 1) + (column - 1);\n                elem.push((\n                    <button\n                        className=\"psquare\"\n                        style={\n                            this.state.hovered.includes(pos)\n                                ?\n                                { background: '#ecb865', opacity: '0.5' }\n                                :\n                                this.state.data[pos] === 1 ? { background: '#fbc9be' } : {}\n                        }\n                        onClick={() => this.plan(pos)}\n                        onMouseEnter={() => this.hoverHandle(pos)}\n                        onMouseLeave={() => this.hoveredHandle(pos)}\n                    />\n                ));\n            }\n            board.push(elem);\n        }\n        return board;\n    }\n\n    renderEnemyBoard() {\n        let board = []\n        for (let row = 1; row <= 8; row++) {\n            let elem = []\n            for (let column = 1; column <= 8; column++) {\n                let pos = 8 * (row - 1) + (column - 1);\n                elem.push((\n                    <button\n                        className=\"square\"\n                        style={\n                            this.state.hovered.includes(pos)\n                                ?\n                                this.state.isMyTurn ? { background: '#ecb865' } :\n                                    this.state.enemyData[pos] === 2 ? { background: '#6A5ACD' } :\n                                        this.state.enemyData[pos] === 3 ? { background: '#7B68EE' } : {}\n                                :\n                                this.state.enemyData[pos] === 2 ? { background: '#6A5ACD' } :\n                                    this.state.enemyData[pos] === 3 ? { background: '#7B68EE' } : {}\n                        }\n                        onClick={() => this.game(pos)}\n                        disabled={this.state.isPause}\n                        onMouseEnter={() => this.hoverHandle(pos)}\n                        onMouseLeave={() => this.hoveredHandle(pos)}\n                    >{this.state.enemyData[pos] === 2\n                        ?\n                        (<>X</>)\n                        :\n                        this.state.enemyData[pos] === 8 ? (<BiTargetLock />) :\n                            this.state.enemyData[pos] === 9 ? (<TiWaves />) : (<></>)\n                        }\n                    </button>\n                ));\n            }\n            board.push(elem);\n        }\n        return board;\n    }\n\n    renderMyBoard() {\n        let board = []\n        for (let row = 1; row <= 8; row++) {\n            let elem = []\n            for (let column = 1; column <= 8; column++) {\n                let pos = 8 * (row - 1) + (column - 1);\n                elem.push((\n                    <button\n                        className=\"square\"\n                        style={\n                            this.state.data[pos] === 1\n                                ?\n                                { background: '#fbc9be' }\n                                :\n                                this.state.data[pos] === 2 ? { background: '#6A5ACD' } :\n                                    this.state.data[pos] === 3 ? { background: '#7B68EE' } : {}\n                        }\n                        disabled=\"true\"\n                    >{this.state.data[pos] === 2 ? (<>X</>) : (<></>)}</button>\n                ));\n            }\n            board.push(elem);\n        }\n        return board;\n    }\n\n    equipMissile() {\n        this.setState({\n            isUsingMissile: true\n        });\n    }\n\n    cancelMissile() {\n        this.setState({\n            isUsingMissile: false\n        })\n    }\n\n    useGlasses() {\n        socket.emit('use glasses', { room: this.props.room, auth: localStorage.getItem('auth') });\n        this.state.audio[2].currentTime = 0;\n        this.state.audio[2].play();\n        this.setState({\n            radarAvai: this.state.radarAvai - 1\n        })\n    }\n\n    tick() {\n        let cur = this.state.seconds;\n        this.setState({\n            seconds: cur - 1\n        })\n\n        if (this.state.seconds === 0) {\n            clearInterval(this.interval)\n            socket.emit('timeout', this.props.room);\n            this.setState({\n                isMyTurn: false\n            })\n        }\n\n        if (this.state.seconds < 0) {\n            clearInterval(this.interval)\n            this.setState({\n                seconds: 0,\n                isMyTurn: false\n            })\n            socket.emit('timeout', this.props.room);\n        }\n    }\n\n    resetState() {\n        this.setState({\n            hovered: [],\n            secretSong: false,\n            data: new Array(64).fill(0),\n            enemyData: new Array(64).fill(0),\n            chat: [],\n            chatMsg: '',\n            seconds: 10,\n            isUsingMissile: false,\n            score: 0,\n            enemyScore: 0,\n            isMyTurn: false,\n            isPause: false,\n            missileAvai: 0,\n            radarAvai: 0,\n            isPlanningStage: true,\n            currentShipSize: 4,\n            shipAmount: 1,\n            horizontal: true,\n            vertical: false,\n            lastPlaced: [],\n            controlButton: false,\n            isFirstGame: false\n        }, () => {\n            socket.emit('request user data', localStorage.getItem('auth'));\n        })\n    }\n\n    componentDidMount() {\n        Swal.fire({\n            title: 'Welcome to the game',\n            html: '<a>In this stage, place your ship on the grid then press <b>\\'Next\\'</b> after you have placed all the ship of that <b>particular size</b></a>'\n        }).then(result => {\n            Swal.fire({\n                title: 'Warning',\n                html: '<p>Once you press <b>\\'Next\\'</b>, you can\\'t go back to rearrange your ship in previous size</p>',\n                icon: 'warning'\n            })\n        })\n\n        socket.emit('request user data', localStorage.getItem('auth'));\n\n        socket.on('response user data', data => {\n            if (data.items.missile >= 1) {\n                this.setState({\n                    missileAvai: 1\n                })\n            }\n            if (data.items.glasses === 1) {\n                this.setState({\n                    radarAvai: 1\n                })\n            } else if (data.items.glasses >= 2) {\n                this.setState({\n                    radarAvai: 2\n                })\n            }\n        })\n\n        socket.on('name data', data => {\n            this.setState({\n                name: data.you,\n                enemyName: data.enemy\n            })\n        })\n\n        socket.on('update score', data => {\n            this.setState({\n                score: data[this.state.name],\n                enemyScore: data[this.state.enemyName]\n            })\n        })\n\n        socket.on('run game', status => {\n            this.setState({\n                isMyTurn: status === 'go' ? true : false,\n                isPlanningStage: false\n            })\n            let timerInterval;\n            Swal.fire({\n                title: 'Game will start in',\n                html: '<a style=\"margin-top: -20px; margin-bottom: -20px; font-size: 50px\"></a>',\n                timer: 3000,\n                timerProgressBar: true,\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading();\n                    timerInterval = setInterval(() => {\n                        const content = Swal.getContent()\n                        if (content) {\n                            const t = content.querySelector('a')\n                            if (t) {\n                                t.textContent = Math.ceil(Swal.getTimerLeft() / 1000)\n                            }\n                        }\n                    }, 100)\n                },\n                willClose: () => {\n                    clearInterval(timerInterval)\n                }\n            }).then((result) => {\n                if (result.dismiss === Swal.DismissReason.timer) {\n                    if (status === 'go') {\n                        this.setState({ seconds: 10 });\n                        this.interval = setInterval(() => this.tick(), 1000);\n                    }\n                }\n            })\n        })\n\n        socket.on('opponent timeout', () => {\n            this.setState({\n                isMyTurn: true,\n                seconds: 10\n            })\n            this.interval = setInterval(() => this.tick(), 1000);\n        })\n\n        socket.on('opponent want to pause', name => {\n            Swal.fire({\n                text: name + ' wanted to pause the game',\n                showDenyButton: true,\n                allowOutsideClick: false,\n                confirmButtonText: 'Accept',\n                denyButtonText: 'Decline'\n            }).then(result => {\n                if (result.isConfirmed) {\n                    socket.emit('pause accept', this.props.room);\n                    if (this.state.isMyTurn) {\n                        clearInterval(this.interval);\n                    }\n                    this.setState({\n                        isPause: true\n                    })\n                    Swal.fire({\n                        title: 'Paused',\n                        allowOutsideClick: false,\n                        showConfirmButton: false\n                    })\n                } else {\n                    socket.emit('pause reject', this.props.room);\n                }\n            })\n        })\n\n        socket.on('opponent accept pause', () => {\n            Swal.close();\n            this.setState({\n                isPause: true\n            })\n            if (this.state.isMyTurn) {\n                clearInterval(this.interval);\n            }\n        })\n\n        socket.on('opponent reject pause', () => {\n            Swal.close();\n            Swal.fire({\n                title: 'Rejected',\n                icon: 'warning'\n            })\n        })\n\n        socket.on('opponent resume', () => {\n            Swal.close();\n            if (this.state.isMyTurn) {\n                this.interval = setInterval(() => this.tick(), 1000);\n            }\n            this.setState({\n                isPause: false\n            })\n        })\n\n        socket.on('receive chat', msg => {\n            let arr = this.state.chat.slice();\n            arr.push(msg);\n            this.setState({\n                chat: arr\n            }, () => {\n                let chatbox = document.getElementById(\"chat-box\");\n                var xH = chatbox.scrollHeight;\n                chatbox.scrollTo(0, xH);\n            })\n            this.forceUpdate();\n        })\n\n        socket.on('secret key', () => {\n            this.setState({\n                secretSong: false\n            }, () => {\n                this.setState({\n                    secretSong: true\n                })\n            })\n        })\n\n        socket.on('update enemy grid', payload => {\n            clearInterval(this.interval);\n            this.setState({\n                enemyData: payload.data,\n                score: payload.score,\n                isMyTurn: false,\n                seconds: 0\n            })\n        })\n\n        socket.on('update my grid', data => {\n            let newData = this.state.data.slice();\n            for (let i = 0; i < data.length; i++) {\n                if (data[i] === 2 || data[i] === 3) {\n                    newData[i] = data[i];\n                }\n            }\n            clearInterval(this.interval);\n            this.setState({\n                data: newData,\n                isMyTurn: true,\n                seconds: 10\n            })\n            this.interval = setInterval(() => this.tick(), 1000);\n        })\n\n        socket.on('missile not enough', () => {\n            Swal.fire({\n                title: 'Oops',\n                text: 'You don\\'t have enough item or already used the item in this round',\n                icon: 'error'\n            })\n        })\n\n        socket.on('used missile', () => {\n            socket.emit('update missile', localStorage.getItem('auth'));\n        })\n\n        socket.on('glasses result found', data => {\n            this.setState({\n                enemyData: data\n            });\n            Swal.fire({\n                title: 'You found a ship, Destroy them!'\n            })\n        })\n\n        socket.on('glasses result not found', data => {\n            this.setState({\n                enemyData: data\n            });\n            Swal.fire({\n                title: 'You found nothing, it is marked'\n            })\n        })\n\n        socket.on('end game', payload => {\n            clearInterval(this.interval);\n            if (payload.winner.auth === localStorage.getItem('auth')) {\n                socket.emit('update points', {\n                    auth: payload.winner.auth,\n                    score: payload.winner.score\n                });\n                socket.emit('update pocket', payload.winner.auth);\n                this.state.audio[3].currentTime = 0;\n                this.state.audio[3].play();\n                Swal.fire({\n                    title: 'Congratulations!',\n                    html: 'You <b>won</b> the game<br>Score: <b>' + payload.winner.score\n                        + '</b> Points<br>Reward: <b>200</b> Coins<br><br>Enemy <b>' + this.state.enemyName\n                        + '</b> score: ' + this.state.enemyScore,\n                    imageUrl: '/win.png',\n                    imageWidth: 256,\n                    imageHeight: 256,\n                    allowOutsideClick: false,\n                    showConfirmButton: false,\n                    timerProgressBar: true,\n                    timer: 10000\n                }).then(result => {\n                    if (result.dismiss === Swal.DismissReason.timer) {\n                        Swal.fire({\n                            text: 'Play again?',\n                            showDenyButton: true,\n                            allowOutsideClick: false,\n                            confirmButtonText: 'Continue',\n                            denyButtonText: 'Exit'\n                        }).then(result => {\n                            if (result.isConfirmed) {\n                                socket.emit('play again request', this.props.room);\n                                Swal.fire({\n                                    title: 'Waiting for opponent',\n                                    allowOutsideClick: false,\n                                    showConfirmButton: false,\n                                    willOpen: () => {\n                                        Swal.showLoading();\n                                    }\n                                })\n                            } else {\n                                window.location.reload();\n                            }\n                        })\n                    }\n                })\n            } else {\n                socket.emit('update points', {\n                    auth: localStorage.getItem('auth'),\n                    score: payload.loser.score\n                });\n                this.state.audio[4].currentTime = 0;\n                this.state.audio[4].play();\n                Swal.fire({\n                    title: 'Uhh!',\n                    html: 'You <b>lose</b> the game<br>Scored: <b>' + payload.loser.score\n                        + '</b> Points<br>Reward: <b>0</b> Coins<br><br>Enemy <b>' + this.state.enemyName\n                        + '</b> score: ' + this.state.enemyScore,\n                    imageUrl: '/lose.png',\n                    imageWidth: 256,\n                    imageHeight: 256,\n                    allowOutsideClick: false,\n                    showConfirmButton: false,\n                    timerProgressBar: true,\n                    timer: 10000\n                }).then(result => {\n                    if (result.dismiss === Swal.DismissReason.timer) {\n                        Swal.fire({\n                            text: 'Play again?',\n                            showDenyButton: true,\n                            allowOutsideClick: false,\n                            confirmButtonText: 'Continue',\n                            denyButtonText: 'Exit'\n                        }).then(result => {\n                            if (result.isConfirmed) {\n                                socket.emit('play again request', this.props.room);\n                                Swal.fire({\n                                    title: 'Waiting for opponent',\n                                    allowOutsideClick: false,\n                                    showConfirmButton: false,\n                                    willOpen: () => {\n                                        Swal.showLoading();\n                                    }\n                                })\n                            } else {\n                                window.location.reload();\n                            }\n                        })\n                    }\n                })\n            }\n        })\n\n        socket.on('opponent want to play again', () => {\n            Swal.fire({\n                text: this.state.enemyName + ' want to play again',\n                showDenyButton: true,\n                allowOutsideClick: false,\n                confirmButtonText: 'Accept',\n                denyButtonText: 'Decline'\n            }).then(result => {\n                if (result.isConfirmed) {\n                    socket.emit('play again accept', this.props.room);\n                    this.resetState();\n                } else {\n                    window.location.reload();\n                }\n            })\n        })\n\n        socket.on('opponent accept play again', () => {\n            this.resetState();\n            Swal.close();\n        })\n    }\n\n    render() {\n        let PlanningStage = (\n            <Container style={{ paddingTop: '2%', minWidth: '600px' }}>\n                <Row>\n                    <Col>\n                        <Navbar bg=\"dark\" variant=\"dark\" style={{ borderRadius: '10px 10px 0 0' }}>\n                            <Navbar.Collapse>\n                                <Nav className=\"container-fluid\">\n                                    <Navbar.Text className=\"ml-auto mr-auto\" style={{ color: 'white', fontSize: '18px' }}>\n                                        Place Your Ships ㋡\n                                </Navbar.Text>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Navbar>\n                        <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n                            <Card.Body>\n                                <Row>\n                                    <Col lg={9} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                        {this.renderPlanBoard().map(each => (<div className=\"board-row\">{each}</div>))}\n                                    </Col>\n                                    <Col lg={3}>\n                                        <Row style={{ width: '100%', marginLeft: 'auto', marginRight: 'auto', marginTop: '10px', marginBottom: '10px' }}>\n                                            <Card style={{ width: '100%' }}>\n                                                <Card.Body>\n                                                    <Button variant='info' block onClick={() => this.changeAlign('hori')}>Horizontal</Button>\n                                                    <Button variant='info' block onClick={() => this.changeAlign('vert')}>Vertical</Button>\n                                                </Card.Body>\n                                            </Card>\n                                        </Row>\n                                        <Row style={{ width: '100%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '10px' }} className=\"text-center\">\n                                            <Card style={{ width: '100%' }}>\n                                                <Card.Header>\n                                                    <Card.Text>Ship amount</Card.Text>\n                                                </Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text style={{ marginBottom: '-20px', marginTop: '-20px', fontSize: '50px' }}>\n                                                        {this.state.shipAmount}\n                                                    </Card.Text>\n                                                    <Card.Text>to be placed</Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Row>\n                                        <Row style={{ width: '100%', marginLeft: 'auto', marginRight: 'auto', marginBottom: '10px' }}>\n                                            <Card style={{ width: '100%' }}>\n                                                <Card.Body>\n                                                    <Button variant='primary' block onClick={() => this.next()}>Next</Button>\n                                                    <Button variant='danger' block onClick={() => this.back()} disabled={!this.state.controlButton}>Back</Button>\n                                                </Card.Body>\n                                            </Card>\n                                        </Row>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n\n        let GamingStage = (\n            <Container style={{ paddingTop: '2%', minWidth: '1100px' }}>\n                {this.state.secretSong && (<iframe width=\"0\" height=\"0\" style={{ display: 'none' }} src=\"https://www.youtube.com/embed/jveH6adL5DY?controls=0&autoplay=1&loop=true\" frameborder=\"0\" allowfullscreen></iframe>)}\n                <Row >\n                    <Col>\n                        <Navbar bg=\"dark\" variant=\"dark\" style={{ borderRadius: '10px 10px 0 0' }}>\n                            <Navbar.Collapse>\n                                <Nav className=\"container-fluid\">\n                                    {!this.state.isPause ?\n                                        (<Nav.Link onClick={() => this.pause()}>\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                <BsFillPauseFill style={{ marginRight: '5px' }} /> Pause\n                                    </div>\n                                        </Nav.Link>)\n                                        :\n                                        (<Nav.Link onClick={() => this.resume()}>\n                                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                                < BsFillPlayFill style={{ marginRight: '5px' }} /> Resume\n                                    </div>\n                                        </Nav.Link>)\n                                    }\n                                    <Navbar.Text className=\"ml-auto\">\n                                        <div style={{ marginTop: '3px' }} >\n                                            <h5>\n                                                <Badge style={{ width: '500px' }} variant={this.state.isPause ? 'light' : this.state.isMyTurn ? 'success' : 'danger'} >\n                                                    {this.state.isPause ? (<>Paused</>) : this.state.isMyTurn ? (<>Your Turn</>) : (<>Enemy Turn</>)}\n                                                </Badge>\n                                            </h5>\n                                        </div>\n                                    </Navbar.Text>\n                                    <Nav.Link className=\"ml-auto\" style={{ color: 'white' }}>\n                                        {this.state.name} : {this.state.score} Points<br></br>\n                                        {this.state.enemyName} : {this.state.enemyScore} Points\n                                </Nav.Link>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Navbar>\n                        <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n                            <Card.Body>\n                                <Row>\n                                    <Col lg={4} style={{ marginTop: '10px', marginBottom: '10px' }}>\n                                        {this.renderMyBoard().map(each => (<div className=\"board-row\">{each}</div>))}\n                                    </Col>\n                                    <Col lg={4} style={{ marginTop: '10px', marginBottom: '10px' }}>\n                                        {this.renderEnemyBoard().map(each => (<div className=\"board-row\">{each}</div>))}\n                                    </Col>\n                                    <Col lg={4}>\n                                        <Card border=\"primary\" style={{ width: '100%', height: '350px' }}>\n                                            <Card.Header>Chat</Card.Header>\n                                            <Card.Body id=\"chat-box\" style={{ height: '150px', overflowY: 'scroll' }}>\n                                                {this.state.chat.map(each => (\n                                                    <p>{each}</p>\n                                                ))}\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <InputGroup size=\"sm\">\n                                                    <FormControl id=\"chat-input\" onChange={e => this.handleChat(e)} onKeyPress={e => this.handleKey(e)} aria-describedby=\"basic-addon1\" style={{ marginTop: '5px' }} />\n                                                    <InputGroup.Append>\n                                                        <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => this.send()}>Send</Button>\n                                                    </InputGroup.Append>\n                                                </InputGroup>\n                                            </Card.Footer>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col lg={8}>\n                                        <Card style={{ width: '100%', marginTop: '10px', height: '100%' }}>\n                                            <Card.Body>\n                                                <Row>\n                                                    <Col>\n                                                        <Card.Title>Items</Card.Title>\n                                                        <Card.Subtitle className=\"mb-2 text-muted\">Missile quota: once per game</Card.Subtitle>\n                                                        <Card.Subtitle className=\"mb-2 text-muted\">Glasses quota: twice per game</Card.Subtitle>\n                                                        <Card.Subtitle className=\"mb-2 text-muted\"><br></br>Use them wisely</Card.Subtitle>\n                                                    </Col>\n                                                    <Col style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                                        <Button variant='info' block disabled={this.state.isUsingMissile || this.state.missileAvai === 0} onClick={() => this.equipMissile()}><IoIosRocket style={{ marginRight: '5px' }} />Five-shot Missile</Button>\n                                                        <Button variant='info' block disabled={this.state.isPause || !this.state.isMyTurn || this.state.isUsingMissile || this.state.radarAvai === 0} onClick={() => this.useGlasses()}><BiGlasses style={{ marginRight: '5px' }} />Glasses</Button>\n                                                        <Button variant='danger' block disabled={!this.state.isUsingMissile} onClick={() => this.cancelMissile()}>Cancel</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                    <Col lg={4} className=\"text-center\">\n                                        <Card style={{ width: '100%', marginTop: '10px', height: '100%' }}>\n                                            <Card.Body>\n                                                <Card.Title>Time remaining</Card.Title>\n                                                <Card.Text style={{ marginBottom: '-20px', fontSize: '70px' }}>\n                                                    {this.state.seconds}\n                                                </Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        )\n\n        return this.state.isPlanningStage ? PlanningStage : GamingStage;\n    }\n}\n\nexport default Game;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Shop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pocket: 0,\n            missileOwned: 0,\n            glassesOwned: 0,\n            isLoaded: false\n        }\n    }\n\n    fiveShotBuy(n) {\n        if (this.state.pocket < 100 * n) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: \"You don't have enough money\"\n            })\n            return\n        } else {\n            socket.emit('buy missile', { auth: localStorage.getItem('auth'), num: n })\n        }\n    }\n\n    glassesBuy(n) {\n        if (this.state.pocket < 50 * n) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: \"You don't have enough money\"\n            })\n            return\n        } else {\n            socket.emit('buy glasses', { auth: localStorage.getItem('auth'), num: n })\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('get pocket');\n        socket.on('response pocket', data => {\n            this.setState({\n                pocket: data.pocket,\n                missileOwned: data.missile,\n                glassesOwned: data.glasses,\n                isLoaded: true\n            })\n        })\n        socket.on('response buy missile', data => {\n            this.setState({\n                pocket: data.pocket,\n                missileOwned: data.missile\n            })\n        })\n\n        socket.on('response buy glasses', data => {\n            this.setState({\n                pocket: data.pocket,\n                glassesOwned: data.glasses\n            })\n        })\n    }\n\n    render() {\n        let result;\n        if (!this.state.isLoaded) {\n            Swal.fire({\n                title: 'Loading',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading();\n                }\n            })\n        } else {\n            Swal.close();\n            result = (\n                <Row>\n                    <Col>\n                        <Card style={{ marginBottom: '10px' }}>\n                            <Card.Body>Pocket: {this.state.pocket}</Card.Body>\n                        </Card>\n                        <Row >\n                            <Col >\n                                <Card >\n                                    <Card.Body class=\"text-center\">\n                                        <Card.Img variant=\"top\" style={{ width: '40%' }} src=\"https://media.istockphoto.com/vectors/startup-icon-vector-id1074164928?k=6&m=1074164928&s=612x612&w=0&h=dD2gAKmO5MNG-eOh2WE34ZMoLSpF0j_YSYvTFKl-FfA=\" />\n                                        <Card.Title style={{ marginTop: '10px' }} >Five-shot Missile</Card.Title>\n                                        <Card.Text style={{ marginBottom: '20px' }}>Strike five squares in a cross pattern on the grid in one turn</Card.Text>\n                                        <Card.Text>Currently owned: {this.state.missileOwned}</Card.Text>\n                                        <Card.Text style={{ marginTop: '-15px', marginBottom: '10px' }}>Price: 100</Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer className=\"text-center\">\n                                        <Card.Text style={{ marginBottom: '0px' }}>Purchase:</Card.Text>\n                                        <Button onClick={() => this.fiveShotBuy(1)} variant=\"outline-primary\" style={{ width: '100px', marginRight: '10px' }}>X1</Button>\n                                        <Button onClick={() => this.fiveShotBuy(10)} variant=\"outline-primary\" style={{ width: '100px' }}>X10</Button>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n\n                            <Col>\n                                <Card style={{ height: '100%' }}>\n                                    <Card.Body class=\"text-center\">\n                                        <Card.Img variant=\"top\" style={{ width: '40%' }} src=\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-ios7-glasses-outline-512.png\" />\n                                        <Card.Title style={{ marginTop: '10px' }} >Glasses</Card.Title>\n                                        <Card.Text style={{ marginBottom: '20px' }}>Randomly unviel one square</Card.Text>\n                                        <Card.Text >Currently owned: {this.state.glassesOwned}</Card.Text>\n                                        <Card.Text style={{ marginTop: '-15px', marginBottom: '10px' }}>Price: 50</Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer className=\"text-center\">\n                                        <Card.Text style={{ marginBottom: '0px' }}>Purchase:</Card.Text>\n                                        <Button onClick={() => this.glassesBuy(1)} variant=\"outline-primary\" style={{ width: '100px', marginRight: '10px' }}>X1</Button>\n                                        <Button onClick={() => this.glassesBuy(10)} variant=\"outline-primary\" style={{ width: '100px' }}>X10</Button>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        </Row>\n\n                    </Col>\n                </Row>\n            );\n        }\n        return (\n            <Container>\n                {result}\n            </Container>\n        );\n    }\n}\n\nexport default Shop;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container, Image, Table } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Admin extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            admin: 0,\n            showRoomID: false\n        }\n    }\n\n    controlRoomID() {\n        this.setState({ showRoomID: !this.state.showRoomID });\n    }\n\n    admin(key, action) {\n        if (action === 'add money') {\n            socket.emit('add money', key);\n        } else if (action === 'kick') {\n            socket.emit('kick', key);\n        } else if (action === 'reset points') {\n            socket.emit('reset points', key);\n        } else if (action === 'reset room') {\n            socket.emit('reset room', key);\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('admin authorization', localStorage.getItem('auth'));\n\n        socket.on('update admin console', () => {\n            socket.emit('admin authorization', localStorage.getItem('auth'));\n        })\n\n        socket.on('admin authorized', data => {\n            this.setState({\n                admin: 1,\n                data: data\n            })\n        })\n\n        socket.on('restricted access', () => {\n            this.setState({ admin: 2 });\n        })\n\n    }\n\n    render() {\n        let result;\n        if (this.state.admin === 0) {\n            Swal.fire({\n                title: 'Loading',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading()\n                }\n            })\n        } else if (this.state.admin === 1) {\n            Swal.close();\n            result = (\n                <Row>\n                    <Col>\n                        <Card className=\"text-center\">\n                            <Card.Body>\n                                <Button variant='light' block onClick={() => this.controlRoomID()}>Show/Hide Room ID</Button>\n                                <Table responsive bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Profile</th>\n                                            <th>Name</th>\n                                            <th>Points</th>\n                                            <th>Money</th>\n                                            <th>Room</th>\n                                            <th>Control</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.data.map(user => (\n                                            <tr>\n                                                <td><Image style={{ width: '80px', height: '80px' }} src={user.profile} /></td>\n                                                <td>{user.user}</td>\n                                                <td>{user.points}</td>\n                                                <td>{user.pocket}</td>\n                                                <td>\n                                                    {user.room === '' ? (<>-</>) :\n                                                        this.state.showRoomID === true ? user.room : (<>Yes</>)\n                                                    }\n                                                </td>\n                                                <td>\n                                                    <Row>\n                                                        <Col>\n                                                            <Button variant='primary' onClick={() => this.admin(user.auth, 'add money')}>Add Money (1000)</Button>{'  '}\n                                                            <Button variant='danger' onClick={() => this.admin(user.auth, 'kick')}>Kick</Button>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Button variant='warning' onClick={() => this.admin(user.auth, 'reset points')}>Reset Points</Button>{'  '}\n                                                            <Button variant='warning' onClick={() => this.admin(user.room, 'reset room')}>Reset Room</Button>\n                                                        </Col>\n                                                    </Row>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </Table>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            );\n        } else {\n            Swal.close();\n            result = (\n                <Container style={{ marginTop: '50px', marginBottom: '50px' }}>\n                    <Row className=\"text-center\">\n                        <Col>\n                            <Image style={{ width: '20%', marginBottom: '10px' }} src=\"/error.png\" />\n                            <h2>Restricted access</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            );\n        }\n\n        return (\n            <Container>\n                {result}\n            </Container>\n        );\n    }\n}\n\nexport default Admin;","import React from 'react';\nimport socket from './connection';\nimport { Row, Col, Container, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Menu from './component/Menu';\nimport Lobby from './component/Lobby';\nimport Ranking from './component/Ranking';\nimport Login from './component/Login';\nimport Game from './component/Game';\nimport Shop from './component/Shop';\nimport Admin from './component/Admin';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logged = this.logged.bind(this);\n    this.state = {\n      isInGame: false,\n      joinedRoom: ''\n    }\n  }\n\n  isAuthenticated() {\n    return localStorage.getItem('isLogin') === 'true';\n  }\n\n  logged(name) {\n    Swal.fire({\n      title: \"Hello, \" + name,\n      allowOutsideClick: false,\n      showConfirmButton: false,\n      timer: 1500\n    }).then((result) => {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        window.location.reload();\n      }\n    });\n  }\n\n  startGame() {\n    this.setState({ isInGame: true });\n  }\n\n  componentDidMount() {\n\n    socket.on('start the game', roomName => {\n      Swal.close();\n      this.setState({\n        isInGame: true,\n        joinedRoom: roomName\n      })\n    })\n\n    socket.on('opponent disconnect', () => {\n      Swal.close();\n      socket.emit('leave room');\n      this.setState({\n        isInGame: false,\n        joinedRoom: ''\n      })\n    })\n\n    socket.on('receive invitation', room => {\n      Swal.fire({\n        text: 'You are invited to join a room',\n        showDenyButton: true,\n        confirmButtonText: 'Accept',\n        denyButtonText: 'Decline'\n      }).then(result => {\n        if (result.isConfirmed) {\n          socket.emit('join invitation', room);\n        } else {\n          socket.emit('reject invitation', room);\n        }\n      })\n    })\n\n    socket.on('join invitation fail', () => {\n      Swal.fire({\n        icon: 'error',\n        text: \"Rejected\"\n      })\n    })\n\n    socket.on('reset room by admin', () => {\n      window.location.reload()\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <Container style={{ paddingTop: '2%', }}>\n          <Row>\n            {this.isAuthenticated() ? this.state.isInGame ? (<Game room={this.state.joinedRoom} />) : (<Home />) : (<Login logged={this.logged} />)}\n          </Row>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Col>\n        <Switch>\n          <Route path=\"/admin\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Admin />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/rank\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Ranking />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/shop\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Shop />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Lobby />\n              </Card.Body>\n            </Card>\n          </Route>\n        </Switch>\n      </Col>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}