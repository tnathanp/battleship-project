{"version":3,"sources":["connection.js","component/ProfileChoice.js","component/Menu.js","component/Lobby.js","component/Ranking.js","component/Login.js","component/Game.js","component/Shop.js","component/Admin.js","App.js","serviceWorker.js","index.js"],"names":["socket","server","localStorage","getItem","avatarChoices","row1","slice","row2","ProfileChoice","class","Row","map","pic","Col","Button","variant","onClick","props","currentPic","Image","style","width","height","src","thumbnail","React","Component","backgroundChoices","color","code","Menu","changeProfile","bind","state","redirect","lobby","shop","rank","admin","audio","Audio","user","name","profile","items","missile","glasses","isRefreshModal","showDropDown","showProfileSetting","showProfileChoice","showSongSetting","showBackgroundSetting","dest","this","setState","emit","document","body","backgroundImage","url","data","auth","Swal","fire","title","showConfirmButton","allowOutsideClick","willOpen","showLoading","n","aud","i","length","pause","currentTime","play","loop","removeItem","setItem","icon","timer","then","result","dismiss","DismissReason","close","window","location","reload","on","text","logout","modalProfileChoice","Modal","centered","size","show","backdrop","Header","Title","Body","Container","Card","Text","modalProfileSetting","className","Img","Footer","modalSongSetting","onHide","closeButton","controlSong","block","modalBackgroundSetting","backgroundChoice","changeBackground","Navbar","bg","expand","borderRadius","Brand","Toggle","aria-controls","Collapse","Nav","Link","navigate","to","display","alignItems","marginRight","NavDropdown","handleDropDown","drop","Item","Lobby","roomList","friendID","roomID","joinedRoomID","showInviteFriend","showCreateRoom","t","action","e","target","value","modalControl","id","room","modalInviteFriend","Form","Group","Label","Control","onChange","handleFriendID","placeholder","invite","modalCreateRoom","handleRoomID","createRoom","refresh","marginTop","marginBottom","each","joinRoom","Ranking","isLoaded","points","isMe","a","splice","tier","fontSize","ListGroup","item","key","Tier","tierText","Provider","Login","changePic","form","pass","fieldName","fleldVal","login","clickProfileChoice","logged","md","backgroundColor","InputGroup","Prepend","FormControl","handleChange","type","onKeyPress","handleKey","Game","chat","seconds","board","row","elem","column","push","chatbox","getElementById","scrollTop","offsetHeight","clearInterval","interval","paddingTop","xs","renderBoard","border","overflowY","aria-describedby","Append","Subtitle","disabled","setInterval","tick","Square","Shop","pocket","missileOwned","glassesOwned","num","fiveShotBuy","glassesBuy","Admin","showRoomID","controlRoomID","Table","responsive","bordered","hover","App","isInGame","startGame","isAuthenticated","Home","path","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5fc10f5d.chunk.js","sourcesContent":["import server from 'socket.io-client';\nlet socket = server('https://battleship-server-a01.herokuapp.com?auth=' + localStorage.getItem('auth'));\nexport default socket;\n","import React from 'react';\nimport { Row, Col, Button, Image } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst avatarChoices = [\n    'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1652945041.9401/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://i.pinimg.com/originals/7f/7c/1d/7f7c1dd0e47c39c330137a7258ae4bec.png',\n    'https://ih1.redbubble.net/image.1667529454.4344/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://ih1.redbubble.net/image.1652885213.4662/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://ih1.redbubble.net/image.1576587976.3410/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1573068447.8364/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1573043479.7857/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n];\n\nlet row1 = avatarChoices.slice(0, 4);\nlet row2 = avatarChoices.slice(4, 8);\n\nclass ProfileChoice extends React.Component {\n    render() {\n        return (\n            <div class=\"text-center\">\n                <Row>\n                    {row1.map(pic => {\n                        return (\n                            <Col>\n                                <Button variant=\"light\" onClick={() => this.props.currentPic(pic)}>\n                                    <Image style={{ width: '80px', height: '80px' }} src={pic} thumbnail />\n                                </Button>\n                            </Col>\n                        );\n                    })}\n                </Row>\n                <Row>\n                    {row2.map(pic => {\n                        return (\n                            <Col>\n                                <Button variant=\"light\" onClick={() => this.props.currentPic(pic)}>\n                                    <Image style={{ width: '80px', height: '80px' }} src={pic} thumbnail />\n                                </Button>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ProfileChoice;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Navbar, NavDropdown, Nav, Button, Modal, Card, Row, Col, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { RiShoppingCart2Fill, RiShipLine, RiAdminFill } from 'react-icons/ri';\nimport { AiFillTrophy } from 'react-icons/ai';\nimport { FiSettings } from 'react-icons/fi';\nimport { HiHome } from 'react-icons/hi';\nimport { MdExitToApp } from 'react-icons/md';\nimport { BiGlasses } from 'react-icons/bi';\nimport { IoIosRocket } from 'react-icons/io';\nimport ProfileChoice from './ProfileChoice';\nimport './Menu.css';\n\nconst backgroundChoices = [\n    { color: 'Serenity & Rose quartz', code: 'linear-gradient(0deg, #f7cac9 0%, #b3cee5 100%)' },\n    { color: 'Candy', code: 'linear-gradient(43deg, #4158D0 0%, #C850C0 51%, #FFCC70 100%)' },\n    { color: 'Midnight', code: 'linear-gradient(225deg, #FF3CAC 0%, #784BA0 50%, #2B86C5 100%)' },\n    { color: 'Nature', code: 'linear-gradient(132deg, #F4D03F 0%, #16A085 100%)' }\n];\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.changeProfile = this.changeProfile.bind(this);\n        this.state = {\n            redirect: {\n                lobby: false,\n                shop: false,\n                rank: false,\n                admin: false\n            },\n            audio: [\n                new Audio('/Pirates Of The Caribbean Theme Song.mp3'),\n                new Audio('/Coffin Dance (Official Music Video HD).mp3'),\n                new Audio('/Pink Panther Theme Song.mp3')\n            ],\n            user: {\n                name: '',\n                profile: '',\n                items: {\n                    missile: 0,\n                    glasses: 0\n                }\n            },\n            isRefreshModal: false,\n            showDropDown: false,\n            showProfileSetting: false,\n            showProfileChoice: false,\n            showSongSetting: false,\n            showBackgroundSetting: false\n        }\n    }\n\n    navigate(dest) {\n        this.setState({\n            redirect: {\n                lobby: dest === 'lobby',\n                shop: dest === 'shop',\n                rank: dest === 'rank',\n                admin: dest === 'admin'\n            }\n        })\n    }\n\n    handleDropDown() {\n        if (this.state.showProfileSetting === true ||\n            this.state.showSongSetting === true ||\n            this.state.showBackgroundSetting === true) {\n\n            return false\n        }\n\n        socket.emit('request user data', localStorage.getItem('auth'));\n\n        this.setState({ showDropDown: !this.state.showDropDown })\n    }\n\n    showProfileSetting() {\n        this.setState({ showProfileSetting: !this.state.showProfileSetting });\n    }\n\n    showBackgroundSetting() {\n        this.setState({ showBackgroundSetting: !this.state.showBackgroundSetting });\n    }\n\n    changeBackground(color) {\n        document.body.style.backgroundImage = color;\n    }\n\n    showProfileChoice() {\n        this.setState({ showProfileChoice: !this.state.showProfileChoice });\n    }\n\n    changeProfile(url) {\n        this.setState({\n            isRefreshModal: true\n        })\n        let data = {\n            auth: localStorage.getItem('auth'),\n            url: url\n        }\n        socket.emit('change profile', data);\n        Swal.fire({\n            title: 'Loading',\n            showConfirmButton: false,\n            allowOutsideClick: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        })\n        this.showProfileChoice();\n        this.showProfileSetting();\n    }\n\n    showSongSetting() {\n        this.setState({ showSongSetting: !this.state.showSongSetting });\n    }\n\n    showBackgroundSetting() {\n        this.setState({ showBackgroundSetting: !this.state.showBackgroundSetting });\n    }\n\n    changeBackground(color) {\n        document.body.style.backgroundImage = color;\n    }\n\n    controlSong(n) {\n        let aud = this.state.audio;\n        for (let i = 0; i < aud.length; i++) {\n            aud[i].pause();\n            aud[i].currentTime = 0;\n            if (i === n) {\n                aud[i].play();\n                aud[i].loop = true;\n            }\n        }\n    }\n\n    logout() {\n        localStorage.removeItem('isLogin');\n        localStorage.setItem('isLogin', false);\n        socket.emit('offline', localStorage.getItem('auth'));\n        localStorage.removeItem('auth');\n        Swal.fire({\n            title: 'Successfully logged out',\n            icon: 'success',\n            showConfirmButton: false,\n            allowOutsideClick: false,\n            timer: 1000\n        }).then((result) => {\n            if (result.dismiss === Swal.DismissReason.timer) {\n                Swal.close();\n                window.location.reload(false);\n            }\n        });\n    }\n\n    componentDidMount() {\n        socket.on('response user data', data => {\n            this.setState({\n                user: {\n                    name: data.user,\n                    profile: data.profile,\n                    items: {\n                        missile: data.items.missile,\n                        glasses: data.items.glasses\n                    }\n                }\n            })\n            if (this.state.isRefreshModal === true) {\n                Swal.close();\n                this.showProfileSetting();\n                this.setState({ isRefreshModal: false });\n            }\n        })\n\n        socket.on('success change profile', () => {\n            socket.emit('request user data', localStorage.getItem('auth'));\n        })\n\n        socket.on('get kicked', () => {\n            Swal.fire({\n                title: 'Get kicked',\n                text: 'You get kicked from the admin',\n                timer: 2000,\n                icon: 'warning',\n                showConfirmButton: false,\n                allowOutsideClick: false\n            }).then(result => {\n                Swal.close();\n                this.logout();\n            })\n        })\n    }\n\n    render() {\n\n        const modalProfileChoice = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Choose Profile Picture</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <ProfileChoice currentPic={this.changeProfile} />\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        const modalProfileSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Your profile</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Row className=\"justify-content-md-center\">\n                        <Card style={{ width: '15rem' }}>\n                            <Card.Img variant=\"top\" src={this.state.user.profile} />\n                            <Card.Body>\n                                <Row className=\"justify-content-md-center\">\n                                    <Card.Title>{this.state.user.name}</Card.Title>\n                                </Row>\n                                <Card>\n                                    <Card.Header>\n                                        <Row className=\"justify-content-md-center\">\n                                            <Card.Title>Inventory</Card.Title>\n                                        </Row>\n                                        <Row className=\"justify-content-md-center\">\n                                            <Col>\n                                                <IoIosRocket /> : {this.state.user.items.missile}\n                                            </Col>\n                                            <Col>\n                                                <BiGlasses /> : {this.state.user.items.glasses}\n                                            </Col>\n                                        </Row>\n                                    </Card.Header>\n                                </Card>\n                            </Card.Body>\n                        </Card>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={() => this.showProfileChoice()}>Change picture</Button>\n                    <Button variant=\"secondary\" onClick={() => this.showProfileSetting()}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        const modalSongSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\" onHide={() => this.showSongSetting()}>\n                <Modal.Header closeButton><Modal.Title>Song Setting</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Body><Card.Text>\n                        <Button variant=\"light\" onClick={() => this.controlSong(0)} block>Agressive</Button>\n                        <Button variant=\"light\" onClick={() => this.controlSong(1)} block>Dance</Button>\n                        <Button variant=\"light\" onClick={() => this.controlSong(2)} block>Mystery</Button>\n                        <Button variant=\"dark\" onClick={() => this.controlSong(3)} block>Turn Off</Button>\n                    </Card.Text></Card.Body></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        const modalBackgroundSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\" onHide={() => this.showBackgroundSetting()}>\n                <Modal.Header closeButton><Modal.Title>Background Setting</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Body><Card.Text>\n                        {backgroundChoices.map(backgroundChoice => {\n                            return (\n                                <Button block variant=\"info\" onClick={() => this.changeBackground(backgroundChoice.code)}>\n                                    {backgroundChoice.color}\n                                </Button>\n                            );\n                        })}\n                    </Card.Text></Card.Body></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ borderRadius: '10px 10px 0 0' }}>\n                <Navbar.Brand><RiShipLine />Eiei Battleship<RiShipLine /></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav>\n                        <Nav.Link onClick={() => this.navigate('lobby')}>\n                            {this.state.redirect.lobby && (<Redirect to='/' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <HiHome style={{ marginRight: '5px' }} /> Lobby\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('shop')}>\n                            {this.state.redirect.shop && (<Redirect to='/shop' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <RiShoppingCart2Fill style={{ marginRight: '5px' }} />  Shop\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('rank')}>\n                            {this.state.redirect.rank && (<Redirect to='/rank' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <AiFillTrophy style={{ marginRight: '5px' }} />Rank\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('admin')}>\n                            {this.state.redirect.admin && (<Redirect to='/admin' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <RiAdminFill style={{ marginRight: '5px' }} />Admin\n                            </div>\n                        </Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <NavDropdown\n                            show={this.state.showDropDown}\n                            onClick={() => this.handleDropDown()}\n                            title={<div style={{ display: 'flex', alignItems: 'center' }}>\n                                <FiSettings style={{ marginRight: '5px' }} />Settings\n                                    </div>}\n                            drop='left'\n                        >\n                            <NavDropdown.Item onClick={() => this.showProfileSetting()}>Profile</NavDropdown.Item>\n                            {this.state.showProfileSetting && modalProfileSetting}\n                            {this.state.showProfileChoice && modalProfileChoice}\n                            <NavDropdown.Item onClick={() => this.showBackgroundSetting()}>Background</NavDropdown.Item>\n                            {this.state.showBackgroundSetting && modalBackgroundSetting}\n                            <NavDropdown.Item onClick={() => this.showSongSetting()}>Song</NavDropdown.Item>\n                            {this.state.showSongSetting && modalSongSetting}\n                            <NavDropdown.Item onClick={() => this.logout()}>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <MdExitToApp style={{ marginRight: '5px' }} />Logout\n                                </div>\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Menu;\n","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container, Modal, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BsPersonPlusFill, BsFillPlusSquareFill, BsArrowClockwise } from \"react-icons/bs\";\nimport './Lobby.css';\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            roomList: [],\n            friendID: '',\n            roomID: '',\n            joinedRoomID: '',\n            showInviteFriend: false,\n            showCreateRoom: false\n        }\n    }\n\n    modalControl(t, action) {\n        switch (t) {\n            case 'if':\n                this.setState({ showInviteFriend: action });\n                break;\n            case 'cr':\n                this.setState({ showCreateRoom: action });\n                break;\n        }\n    }\n\n    handleFriendID(e) {\n        this.setState({\n            friendID: e.target.value\n        })\n    }\n\n    handleRoomID(e) {\n        this.setState({\n            roomID: e.target.value\n        })\n    }\n\n    createRoom() {\n        this.modalControl('cr', false);\n        socket.emit('create room', this.state.roomID);\n    }\n\n    joinRoom(id) {\n        socket.emit('join room', id);\n        this.setState({\n            joinedRoomID: id\n        })\n    }\n\n    invite() {\n        socket.emit('request friend id', this.state.friendID);\n    }\n\n    refresh() {\n        socket.emit('get room list');\n    }\n\n    componentDidMount() {\n        socket.emit('get room list');\n\n        socket.on('success create room', id => {\n            this.setState({\n                joinedRoomID: id\n            })\n            Swal.fire({\n                title: 'Waiting for the opponent',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading();\n                }\n            })\n        })\n\n        socket.on('receive invitation', room => {\n            this.setState({\n                joinedRoomID: room\n            });\n            Swal.fire({\n                text: 'You are invited to join a room'\n            });\n            socket.emit('join invitation', room);\n        })\n\n        socket.on('join invitation success', () => {\n            Swal.fire({\n                icon: 'success',\n                text: \"Join success\"\n            })\n        })\n\n        socket.on('join invitation fail', () => {\n            Swal.fire({\n                icon: 'error',\n                text: \"Join fail\"\n            })\n        })\n\n        socket.on('friend id not found', () => {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops',\n                text: \"friend's ID not found\"\n            })\n        })\n\n        socket.on('room id already exist', () => {\n            Swal.fire({\n                title: 'Room name already exists',\n                icon: 'error'\n            })\n        })\n\n        socket.on('update room list', data => {\n            this.setState({\n                roomList: data\n            })\n        })\n\n        socket.on('start the game', () => {\n            Swal.close();\n            Swal.fire({\n                title: 'Game start gooooooooooo',\n                icon: 'success'\n            })\n        })\n\n        socket.on('opponent disconnect', () => {\n            socket.emit('leave room');\n            this.setState({\n                joinedRoomID: ''\n            });\n        })\n\n    }\n\n    render() {\n        const modalInviteFriend = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Invite Friend</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            <Form.Group>\n                                <Form.Label>Friend ID</Form.Label>\n                                <Form.Control onChange={e => this.handleFriendID(e)} placeholder=\"Enter your friend's ID\" />\n                            </Form.Group>\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('if', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.invite()}>Send Invitation</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        const modalCreateRoom = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Create Room</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            Room name\n                        <Form.Control onChange={e => this.handleRoomID(e)} placeholder=\"Enter room name\" />\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('cr', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.createRoom()}>Create</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <Card style={{ width: '100%', height: '100%' }}>\n                            <Card.Header>\n                                Room List\n                                <Button className=\"float-right\" variant=\"warning\" size=\"sm\" onClick={() => this.refresh()}><BsArrowClockwise style={{ marginRight: '3px' }} /> refresh</Button>\n                            </Card.Header>\n                            <Card.Body class=\"text-center\">\n                                <Card.Text>\n                                    {this.state.roomList.length === 0 ? (<Card.Text style={{ marginTop: '20px', marginBottom: '20px' }}>No available room</Card.Text>) : false}\n                                    {this.state.roomList.map(each => (\n                                        <Button block variant=\"light\" onClick={() => this.joinRoom(each.roomID)}>{each.roomID}</Button>)\n                                    )}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer className=\"text-center\">\n\n                                <Button variant=\"primary\" onClick={() => this.modalControl('cr', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsFillPlusSquareFill style={{ marginRight: '10px' }} /> Create Room\n                                    </div>\n                                </Button>\n\n                                {' '}\n\n                                <Button variant=\"info\" onClick={() => this.modalControl('if', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsPersonPlusFill style={{ marginRight: '10px' }} /> Invite Friend\n                                    </div>\n                                </Button>\n\n                                {this.state.showInviteFriend && modalInviteFriend}\n                                {this.state.showCreateRoom && modalCreateRoom}\n\n                            </Card.Footer>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Lobby;\n","import React from 'react';\nimport socket from '../connection';\nimport { Row, Col, Card, Container, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { IconContext } from 'react-icons';\nimport { RiVipCrownFill } from 'react-icons/ri';\nimport { FaUserAlt } from 'react-icons/fa';\nimport Swal from 'sweetalert2';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    socket.emit('request rank data', localStorage.getItem('auth'));\n\n    socket.on('response rank data', data => {\n      this.setState({\n        data: data,\n        isLoaded: true\n      })\n    })\n  }\n\n\n  render() {\n    let result;\n    if (this.state.isLoaded === false) {\n      Swal.fire({\n        title: 'Loading',\n        allowOutsideClick: false,\n        showConfirmButton: false,\n        willOpen: () => {\n          Swal.showLoading()\n        }\n      })\n    } else {\n      let rank = 0;\n      let points = 0;\n      for (let i = 0; i < this.state.data.length; i++) {\n        if (this.state.data[i].isMe === true) {\n          rank = this.state.data[i].rank\n          points = this.state.data[i].points\n        }\n      }\n      let a = [];\n      for (let i = 3; i < this.state.data.length; i++) {\n        a.splice(i - 3, 0, this.state.data[i]);\n      }\n      Swal.close();\n      result = (\n        <Row>\n          <Col>\n\n            <Tier tier=\"1\" points={this.state.data[0].points} name={this.state.data[0].name} />\n            <Tier tier=\"2\" points={this.state.data[1].points} name={this.state.data[1].name} />\n            <Tier tier=\"3\" points={this.state.data[2].points} name={this.state.data[2].name} />\n\n            <Card className=\"text-center\" style={{ marginTop: '10px' }}>\n              <Card.Body>\n                <Row>\n                  <Col>\n                    Your points\n                    <Card.Text style={{ fontSize: '25px' }}>{points}</Card.Text>\n                  </Col>\n                  <Col>\n                    Your rank\n                    <Card.Text style={{ fontSize: '25px' }}>{rank}</Card.Text>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n\n          </Col>\n          <Col>\n\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Text>\n                  <ListGroup>\n                    {\n                      a.map((item, i) => {\n                        return (\n                          <ListGroup.Item key={i}>\n                            <Row>\n                              <Col>\n                                <h6 class=\"text-uppercase text-muted mb-0 card-title\">Rank: {item.rank}</h6>\n                                <h6 >{item.name}</h6>\n                              </Col>\n                              <Col>\n                                <h6 style={{ marginTop: '20px' }}>{item.points} Points</h6>\n                              </Col>\n                            </Row>\n                          </ListGroup.Item>\n                        )\n                      })\n                    }\n                  </ListGroup>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n\n          </Col>\n        </Row>\n      );\n    }\n\n    return (\n      <Container>\n        {result}\n      </Container>\n    );\n  }\n\n}\n\nclass Tier extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tier: '',\n      tierText: '',\n      points: '',\n      color: ''\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: '10px' }}>\n        <div class=\"card-stats card\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <h5 class=\"text-uppercase text-muted mb-0 card-title\">{this.state.tierText}</h5>\n                <span class=\"h5 font-weight-bold mb-0\">{this.props.name}</span>\n              </div>\n              <div class=\"col-auto col\">\n                <IconContext.Provider value={{ color: this.state.color, size: '35px' }}>\n                  <div>\n                    <RiVipCrownFill />\n                  </div>\n                </IconContext.Provider>\n              </div>\n            </div>\n            <p class=\"mt-3 mb-0 text-muted text-sm\">\n              <span class=\"text-success mr-2\">{this.props.points} Points</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    switch (this.props.tier) {\n      case '1':\n        this.setState({\n          tier: '1',\n          tierText: '1st place',\n          points: this.props.points,\n          color: 'gold'\n        })\n        break;\n      case '2':\n        this.setState({\n          tier: '2',\n          tierText: '2nd place',\n          points: this.props.points,\n          color: 'silver'\n        })\n        break;\n      case '3':\n        this.setState({\n          tier: '3',\n          tierText: '3rd place',\n          points: this.props.points,\n          color: '#B87333'\n        })\n        break;\n    }\n  }\n}\n\nexport default Ranking;","import React from 'react';\nimport socket from '../connection';\nimport { Image, Row, Col, Container, FormControl, InputGroup, Button, Modal, Card } from 'react-bootstrap';\nimport { BsFillPersonFill, BsFillLockFill } from 'react-icons/bs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Swal from 'sweetalert2';\nimport ProfileChoice from './ProfileChoice';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changePic = this.changePic.bind(this);\n    this.state = {\n      form: {\n        user: '',\n        pass: '',\n        profile: 'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n      },\n      showProfileChoice: false\n    }\n  }\n\n  handleChange(e) {\n    let fieldName = e.target.name;\n    let fleldVal = e.target.value;\n    this.setState({ form: { ...this.state.form, [fieldName]: fleldVal } })\n  }\n\n  handleKey(e) {\n    if (e.key === 'Enter') {\n      this.login();\n    }\n  }\n\n  login() {\n    if (this.state.form.user === '' || this.state.form.pass === '') {\n      Swal.fire({\n        title: 'Empty field',\n        icon: 'error'\n      });\n      localStorage.setItem('isLogin', false);\n    } else {\n      Swal.fire({\n        title: 'Loading',\n        allowOutsideClick: false,\n        willOpen: () => {\n          Swal.showLoading()\n        }\n      })\n      socket.emit('login', this.state.form);\n    }\n  }\n\n  clickProfileChoice() {\n    this.setState({ showProfileChoice: !this.state.showProfileChoice })\n  }\n\n  changePic(url) {\n    this.setState({\n      form: {\n        user: this.state.form.user,\n        pass: this.state.form.pass,\n        profile: url\n      }\n    });\n    this.clickProfileChoice();\n  }\n\n  componentDidMount() {\n    socket.on('success login', auth => {\n      Swal.close();\n      localStorage.removeItem('auth');\n      localStorage.setItem('auth', auth);\n      localStorage.removeItem('isLogin');\n      localStorage.setItem('isLogin', true);\n      this.props.logged(this.state.form.user);\n    });\n\n    socket.on('fail login', () => {\n      Swal.close();\n      Swal.fire({\n        title: 'Failed',\n        text: 'Wrong username or password',\n        icon: 'error'\n      });\n      localStorage.setItem('isLogin', false);\n    })\n\n  }\n\n  render() {\n    const modalProfileChoice = (\n      <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n        <Modal.Header><Modal.Title>Choose Profile Picture</Modal.Title></Modal.Header>\n        <Modal.Body>\n          <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n            <ProfileChoice currentPic={this.changePic} />\n          </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n        </Modal.Body>\n      </Modal>\n    );\n\n    return (\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col></Col>\n          <Col md={6}>\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '10px' }}>\n              <div class=\"text-center\">\n                <Card.Body>\n\n                  <Image style={{ width: '100%', marginBottom: '-30px' }} src=\"https://www.tgpl.in.th/wp-content/uploads/2016/01/battleship.png\" />\n\n                  <h1>Eiei Battleship</h1>\n\n                </Card.Body>\n                <Card.Footer>\n                  <Row>\n                    <Col md={4}>\n\n                      <Button variant=\"outline-secondary\" size=\"sm\" style={{ marginBottom: '20px' }} onClick={() => this.clickProfileChoice()}>\n                        <Image style={{ width: '80px', height: '80px', marginTop: '5px', marginBottom: '5px' }} src={this.state.form.profile} thumbnail />\n                      </Button>\n                      {this.state.showProfileChoice && modalProfileChoice}\n\n                    </Col>\n                    <Col>\n\n                      <InputGroup className=\"mb-3\" style={{ marginTop: '10px' }}>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <BsFillPersonFill />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl name=\"user\" placeholder=\"Username\" size=\"md\" onChange={e => this.handleChange(e)} />\n                      </InputGroup>\n\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <BsFillLockFill />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl name=\"pass\" type=\"password\" placeholder=\"Password\" onChange={e => this.handleChange(e)} onKeyPress={e => this.handleKey(e)} />\n                      </InputGroup>\n                    </Col>\n                  </Row>\n                  <Button block variant=\"success\" onClick={() => this.login()}>Login</Button>\n                </Card.Footer>\n              </div>\n            </Card>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport socket from '../connection';\nimport { Row, Col, Container, Card, Navbar, Nav, Button, InputGroup, FormControl, ListGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Swal from 'sweetalert2';\nimport { BsFillPauseFill } from 'react-icons/bs'\nimport { IoIosRocket } from 'react-icons/io'\nimport { BiGlasses } from 'react-icons/bi'\nimport './Game.css';\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            chat: [],\n            seconds: 10\n        }\n    }\n\n    renderBoard() {\n        let board = []\n        for (let row = 1; row <= 8; row++) {\n            let elem = []\n            for (let column = 1; column <= 8; column++) {\n                elem.push((<Square value={column} />));\n            }\n            board.push(elem);\n        }\n        return board;\n    }\n\n    tick() {\n        this.setState(state => ({\n            seconds: state.seconds - 1\n        }));\n\n        //add message to chatbox\n        this.state.chat.push(this.state.seconds);\n        let chatbox = document.getElementById(\"chat-box\");\n        chatbox.scrollTop = chatbox.offsetHeight;\n\n        if (this.state.seconds === 0) {\n            clearInterval(this.interval)\n            Swal.fire({\n                text: 'Time out',\n            })\n        }\n    }\n\n    render() {\n        return (\n            <Container style={{ paddingTop: '2%' }}>\n                <Row>\n                    <Col>\n                        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ borderRadius: '10px 10px 0 0' }}>\n                            <Navbar.Collapse>\n                                <Nav>\n                                    <Nav.Link >\n                                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                                            <BsFillPauseFill style={{ marginRight: '5px' }} /> Pause\n                                        </div>\n                                    </Nav.Link>\n                                </Nav>\n                            </Navbar.Collapse>\n                        </Navbar>\n                        <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n                            <Card.Body>\n                                <Row>\n                                    <Col xs={4} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                        {this.renderBoard().map(each => (<div className=\"board-row\">{each}</div>))}\n                                    </Col>\n                                    <Col xs={4} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                        {this.renderBoard().map(each => (<div className=\"board-row\">{each}</div>))}\n                                    </Col>\n                                    <Col xs={4}>\n                                        <Card border=\"primary\" style={{ width: '100%', height: '350px'}}>\n                                            <Card.Header>Chat</Card.Header>\n                                            <Card.Body id=\"chat-box\" style={{ height: '150px', overflowY: 'scroll' }}>\n                                                {this.state.chat.map(each => (\n                                                    <p>{each}</p>\n                                                ))}\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                <InputGroup size=\"sm\">\n                                                    <FormControl aria-describedby=\"basic-addon1\" style={{ marginTop: '5px' }} />\n                                                    <InputGroup.Append>\n                                                        <Button variant=\"outline-secondary\" size=\"sm\">Send</Button>\n                                                    </InputGroup.Append>\n                                                </InputGroup>\n                                            </Card.Footer>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col xs={8}>\n                                        <Card style={{ width: '100%', marginTop: '10px', height: '100%' }}>\n                                            <Card.Body>\n                                                <Row>\n                                                    <Col>\n                                                        <Card.Title>Items</Card.Title>\n                                                        <Card.Subtitle className=\"mb-2 text-muted\">Missile quota: one per game</Card.Subtitle>\n                                                        <Card.Subtitle className=\"mb-2 text-muted\">Glasses quota: twice per game</Card.Subtitle>\n                                                        <Card.Subtitle className=\"mb-2 text-muted\"><br></br>Use them wisely</Card.Subtitle>\n                                                    </Col>\n                                                    <Col style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                                        <Button variant='info' block><IoIosRocket style={{ marginRight: '5px' }} />Five-shot Missile</Button>\n                                                        <Button variant='info' block><BiGlasses style={{ marginRight: '5px' }} />Glasses</Button>\n                                                        <Button variant='danger' disabled='true' block>Cancel</Button>\n                                                    </Col>\n                                                </Row>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                    <Col xs={4} className=\"text-center\">\n                                        <Card style={{ width: '100%', marginTop: '10px', height: '100%' }}>\n                                            <Card.Body>\n                                                <Card.Title>Time remaining</Card.Title>\n                                                <Card.Text style={{ marginBottom: '-20px', fontSize: '70px' }}>\n                                                    {this.state.seconds}\n                                                </Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.tick(), 1000);\n    }\n}\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <button className=\"square\">\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Shop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pocket: 0,\n            missileOwned: 0,\n            glassesOwned: 0,\n            isLoaded: false\n        }\n    }\n\n    fiveShotBuy(n) {\n        if (this.state.pocket < 100 * n) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: \"You don't have enough money\"\n            })\n            return\n        } else {\n            socket.emit('buy missile', { auth: localStorage.getItem('auth'), num: n })\n        }\n    }\n\n    glassesBuy(n) {\n        if (this.state.pocket < 50 * n) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: \"You don't have enough money\"\n            })\n            return\n        } else {\n            socket.emit('buy glasses', { auth: localStorage.getItem('auth'), num: n })\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('get pocket');\n        socket.on('response pocket', data => {\n            this.setState({\n                pocket: data.pocket,\n                missileOwned: data.missile,\n                glassesOwned: data.glasses,\n                isLoaded: true\n            })\n        })\n        socket.on('response buy missile', data => {\n            this.setState({\n                pocket: data.pocket,\n                missileOwned: data.missile\n            })\n        })\n\n        socket.on('response buy glasses', data => {\n            this.setState({\n                pocket: data.pocket,\n                glassesOwned: data.glasses\n            })\n        })\n    }\n\n    render() {\n        let result;\n        if (!this.state.isLoaded) {\n            Swal.fire({\n                title: 'Loading',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading();\n                }\n            })\n        } else {\n            Swal.close();\n            result = (\n                <Row>\n                    <Col>\n                        <Card style={{ marginBottom: '10px' }}>\n                            <Card.Body>Pocket: {this.state.pocket}</Card.Body>\n                        </Card>\n                        <Row >\n                            <Col >\n                                <Card >\n                                    <Card.Body class=\"text-center\">\n                                        <Card.Img variant=\"top\" style={{ width: '40%' }} src=\"https://media.istockphoto.com/vectors/startup-icon-vector-id1074164928?k=6&m=1074164928&s=612x612&w=0&h=dD2gAKmO5MNG-eOh2WE34ZMoLSpF0j_YSYvTFKl-FfA=\" />\n                                        <Card.Title style={{ marginTop: '10px' }} >Five-shot Missile</Card.Title>\n                                        <Card.Text style={{ marginBottom: '20px' }}>Strike five squares in a cross pattern on the grid in one turn</Card.Text>\n                                        <Card.Text>Currently owned: {this.state.missileOwned}</Card.Text>\n                                        <Card.Text style={{ marginTop: '-15px', marginBottom: '10px' }}>Price: 100</Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer className=\"text-center\">\n                                        <Card.Text style={{ marginBottom: '0px' }}>Purchase:</Card.Text>\n                                        <Button onClick={() => this.fiveShotBuy(1)} variant=\"outline-primary\" style={{ width: '100px', marginRight: '10px' }}>X1</Button>\n                                        <Button onClick={() => this.fiveShotBuy(10)} variant=\"outline-primary\" style={{ width: '100px' }}>X10</Button>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n\n                            <Col>\n                                <Card style={{ height: '100%' }}>\n                                    <Card.Body class=\"text-center\">\n                                        <Card.Img variant=\"top\" style={{ width: '40%' }} src=\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-ios7-glasses-outline-512.png\" />\n                                        <Card.Title style={{ marginTop: '10px' }} >Glasses</Card.Title>\n                                        <Card.Text style={{ marginBottom: '20px' }}>Randomly unviel one square</Card.Text>\n                                        <Card.Text style={{ marginTop: '45px' }}>Currently owned: {this.state.glassesOwned}</Card.Text>\n                                        <Card.Text style={{ marginTop: '-15px', marginBottom: '10px' }}>Price: 50</Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer className=\"text-center\">\n                                        <Card.Text style={{ marginBottom: '0px' }}>Purchase:</Card.Text>\n                                        <Button onClick={() => this.glassesBuy(1)} variant=\"outline-primary\" style={{ width: '100px', marginRight: '10px' }}>X1</Button>\n                                        <Button onClick={() => this.glassesBuy(10)} variant=\"outline-primary\" style={{ width: '100px' }}>X10</Button>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        </Row>\n\n                    </Col>\n                </Row>\n            );\n        }\n        return (\n            <Container>\n                {result}\n            </Container>\n        );\n    }\n}\n\nexport default Shop;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container, Image, Table } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Admin extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            admin: 0,\n            showRoomID: false\n        }\n    }\n\n    controlRoomID() {\n        this.setState({ showRoomID: !this.state.showRoomID });\n    }\n\n    admin(key, action) {\n        if (action === 'add money') {\n            socket.emit('add money', key);\n        } else if (action === 'kick') {\n            socket.emit('kick', key);\n        } else if (action === 'reset points') {\n            socket.emit('reset points', key);\n        } else if (action === 'reset room') {\n            socket.emit('reset room', key);\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('admin authorization', localStorage.getItem('auth'));\n\n        socket.on('update admin console', () => {\n            socket.emit('admin authorization', localStorage.getItem('auth'));\n        })\n\n        socket.on('admin authorized', data => {\n            this.setState({\n                admin: 1,\n                data: data\n            })\n        })\n\n        socket.on('restricted access', () => {\n            this.setState({ admin: 2 });\n        })\n\n    }\n\n    render() {\n        let result;\n        if (this.state.admin === 0) {\n            Swal.fire({\n                title: 'Loading',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading()\n                }\n            })\n        } else if (this.state.admin === 1) {\n            Swal.close();\n            result = (\n                <Row>\n                    <Col>\n                        <Card className=\"text-center\">\n                            <Card.Body>\n                                <Button variant='light' block onClick={() => this.controlRoomID()}>Show/Hide Room ID</Button>\n                                <Table responsive bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Profile</th>\n                                            <th>Name</th>\n                                            <th>Points</th>\n                                            <th>Money</th>\n                                            <th>Room</th>\n                                            <th>Control</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.data.map(user => (\n                                            <tr>\n                                                <td><Image style={{ width: '80px', height: '80px' }} src={user.profile} /></td>\n                                                <td>{user.user}</td>\n                                                <td>{user.points}</td>\n                                                <td>{user.pocket}</td>\n                                                <td>\n                                                    {user.room === '' ? (<>-</>) :\n                                                        this.state.showRoomID === true ? user.room : (<>Yes</>)\n                                                    }\n                                                </td>\n                                                <td>\n                                                    <Row>\n                                                        <Col>\n                                                            <Button variant='primary' onClick={() => this.admin(user.auth, 'add money')}>Add Money (1000)</Button>{'  '}\n                                                            <Button variant='danger' onClick={() => this.admin(user.auth, 'kick')}>Kick</Button>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Button variant='warning' onClick={() => this.admin(user.auth, 'reset points')}>Reset Points</Button>{'  '}\n                                                            <Button variant='warning' onClick={() => this.admin(user.room, 'reset room')}>Reset Room</Button>\n                                                        </Col>\n                                                    </Row>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </Table>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            );\n        } else {\n            Swal.close();\n            result = (\n                <Container style={{ marginTop: '50px', marginBottom: '50px' }}>\n                    <Row className=\"text-center\">\n                        <Col>\n                            <Image style={{ width: '20%', marginBottom: '10px' }} src=\"https://icons.iconarchive.com/icons/paomedia/small-n-flat/256/sign-error-icon.png\" />\n                            <h2>Restricted access</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            );\n        }\n\n        return (\n            <Container>\n                {result}\n            </Container>\n        );\n    }\n}\n\nexport default Admin;","import React from 'react';\nimport socket from './connection';\nimport { Row, Col, Container, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Menu from './component/Menu';\nimport Lobby from './component/Lobby';\nimport Ranking from './component/Ranking';\nimport Login from './component/Login';\nimport Game from './component/Game';\nimport Shop from './component/Shop';\nimport Admin from './component/Admin';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logged = this.logged.bind(this);\n    this.state = {\n      isInGame: false\n    }\n  }\n\n  isAuthenticated() {\n    return localStorage.getItem('isLogin') === 'true';\n  }\n\n  logged(name) {\n    Swal.fire({\n      title: \"Hello, \" + name,\n      allowOutsideClick: false,\n      showConfirmButton: false,\n      timer: 1500\n    }).then((result) => {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        window.location.reload();\n      }\n    });\n  }\n\n  startGame() {\n    this.setState({ isInGame: true });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Container style={{ paddingTop: '2%' }}>\n          <Row>\n            <Button onClick={() => this.startGame()}>Test start game</Button>\n            {this.isAuthenticated() ? this.state.isInGame ? (<Game />) : (<Home />) : (<Login logged={this.logged} />)}\n          </Row>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Col>\n        <Switch>\n          <Route path=\"/admin\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Admin />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/rank\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Ranking />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/shop\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Shop />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Lobby />\n              </Card.Body>\n            </Card>\n          </Route>\n        </Switch>\n      </Col>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}