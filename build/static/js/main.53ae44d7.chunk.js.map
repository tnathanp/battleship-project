{"version":3,"sources":["component/Menu.js","component/Lobby.js","component/Ranking.js","component/ProfileChoice.js","component/LoginModal.js","App.js","serviceWorker.js","index.js"],"names":["Menu","props","state","showDropDown","Swal","fire","icon","title","text","localStorage","removeItem","setItem","window","location","reload","this","setState","Navbar","bg","variant","expand","style","borderRadius","Brand","Toggle","aria-controls","Collapse","Nav","Link","href","display","alignItems","marginRight","className","NavDropdown","show","onClick","handleDropDown","drop","Item","hello","logout","React","Component","Lobby","roomList","friendID","showInviteFriend","showCreateRoom","_type","action","e","target","value","list","i","push","Math","floor","random","roomNum","modalInviteFriend","Modal","centered","size","Header","Title","Body","Container","Row","Col","Card","Text","Form","Group","Label","Control","onChange","handleFriendID","placeholder","Footer","Button","modalControl","invite","modalCreateRoom","createRoom","width","height","refresh","map","each","roomSelected","Ranking","tier","points","marginTop","Tier","tierText","color","marginBottom","class","Provider","avatarChoices","row1","slice","row2","ProfileChoice","pic","type","name","currentPic","alt","src","LoginModal","passPic","bind","form","showProfileChoice","fieldName","fleldVal","user","pass","logged","url","clickProfileChoice","modalProfileChoice","xs","Jumbotron","Image","thumbnail","InputGroup","Prepend","FormControl","handleChange","login","App","picChange","profile","getItem","forceUpdate","addEventListener","beforeunload","removeEventListener","paddingTop","isAuthenticated","Home","backgroundColor","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.53ae44d7.chunk.js","sourcesContent":["import React from 'react';\nimport server from 'socket.io-client';\nimport Swal from 'sweetalert2';\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { RiShoppingCart2Fill, RiShipLine } from 'react-icons/ri';\nimport { AiFillTrophy } from 'react-icons/ai';\nimport { FiSettings } from 'react-icons/fi';\nimport { HiHome } from 'react-icons/hi';\nimport './Menu.css'\n\nclass Menu extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            showDropDown: false\n        }\n    }\n\n    hello() {\n        Swal.fire({\n            icon: 'success',\n            title: 'Hello',\n            text: 'Test',\n        })\n    }\n\n    logout() {\n        localStorage.removeItem('isLogin');\n        localStorage.setItem('isLogin', false);\n        window.location.reload(false);\n    }\n    \n    handleDropDown() {\n        this.setState({ showDropDown: !this.state.showDropDown})\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ borderRadius: '10px 10px 0 0' }}>\n                <Navbar.Brand><RiShipLine />Eiei Battleship<RiShipLine /></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav>\n                        <Nav.Link href=\"/\">\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <HiHome style={{ marginRight: '5px' }} /> Lobby\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link href=\"/shop\">\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <RiShoppingCart2Fill style={{ marginRight: '5px' }} />  Shop\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link href=\"/rank\">\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <AiFillTrophy style={{ marginRight: '5px' }} />Rank\n                            </div>\n                        </Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <NavDropdown\n                            show={this.state.showDropDown}\n                            onClick={() => this.handleDropDown()}\n                            title={<div style={{ display: 'flex', alignItems: 'center' }}>\n                                <FiSettings style={{ marginRight: '5px' }} />Settings\n                                    </div>}\n                            drop='left'\n                        >\n                            <NavDropdown.Item onClick={() => this.hello()}>Profile</NavDropdown.Item>\n                            <NavDropdown.Item onClick={() => this.hello()}>Background</NavDropdown.Item>\n                            <NavDropdown.Item onClick={() => this.hello()}>Song</NavDropdown.Item>\n                            <NavDropdown.Item onClick={() => this.logout()}>Logout</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Menu;\n","import React from 'react';\nimport server from 'socket.io-client';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container, Modal, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BsPersonPlusFill, BsFillPlusSquareFill, BsArrowClockwise } from \"react-icons/bs\";\nimport './Lobby.css';\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            roomList: [],\n            friendID: '',\n            showInviteFriend: false,\n            showCreateRoom: false\n        }\n    }\n\n    modalControl(_type, action) {\n        switch (_type) {\n            case 'if':\n                this.setState({ showInviteFriend: action });\n                break;\n            case 'cr':\n                this.setState({ showCreateRoom: action });\n                break;\n        }\n    }\n\n    handleFriendID(e) {\n        this.setState({\n            friendID: e.target.value\n        })\n    }\n\n    createRoom() {\n        //send create room data to server\n    }\n\n    invite() {\n        //send invitation to server\n    }\n\n    refresh() {\n        //get new list from server\n        let list = []\n        for (let i = 0; i < 5; i++) {\n            list.push(Math.floor(Math.random() * 101))\n        }\n        this.setState({\n            roomList: list\n        })\n    }\n\n    roomSelected(roomNum) {\n        //send selected room number to server\n        //start game\n    }\n\n    componentDidMount() {\n        //get list from server\n        let list = [1, 2, 3, 4, 5]\n        this.setState({\n            roomList: list\n        })\n    }\n\n    render() {\n        const modalInviteFriend = (\n            <Modal centered size=\"lg\" show=\"true\">\n                <Modal.Header><Modal.Title>Invite Friend</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            <Form.Group>\n                                <Form.Label>Friend ID</Form.Label>\n                                <Form.Control onChange={e => this.handleFriendID(e)} placeholder=\"Enter your friend's ID\" />\n                            </Form.Group>\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('if', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.invite()}>Save Changes</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        const modalCreateRoom = (\n            <Modal centered size=\"lg\" show=\"true\">\n                <Modal.Header><Modal.Title>Create Room</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            WIP\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('cr', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.createRoom()}>Save Changes</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <Card style={{ width: '100%', height: '100%' }}>\n                            <Card.Header>\n                                Room List\n                                <Button className=\"float-right\" variant=\"warning\" size=\"sm\" onClick={() => this.refresh()}><BsArrowClockwise style={{ marginRight: '3px' }} /> refresh</Button>\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    {this.state.roomList.map(each => (\n                                        <Card.Link onClick={() => this.roomSelected(each)}><p>{each}</p></Card.Link>)\n                                    )}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer className=\"text-center\">\n\n                                <Button variant=\"primary\" onClick={() => this.modalControl('cr', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsFillPlusSquareFill style={{ marginRight: '10px' }} /> Create Room\n                                    </div>\n                                </Button>\n\n                                {' '}\n\n                                <Button variant=\"info\" onClick={() => this.modalControl('if', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsPersonPlusFill style={{ marginRight: '10px' }} /> Invite Friend\n                                    </div>\n                                </Button>\n\n                                {this.state.showInviteFriend && modalInviteFriend}\n                                {this.state.showCreateRoom && modalCreateRoom}\n\n                            </Card.Footer>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Lobby;\n","import React from 'react';\nimport server from 'socket.io-client';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { IconContext } from 'react-icons';\nimport { RiVipCrownFill } from 'react-icons/ri';\n\nclass Ranking extends React.Component {\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Tier tier=\"1\" points=\"1000\" />\n          <Tier tier=\"2\" points=\"500\" />\n          <Tier tier=\"3\" points=\"100\" />\n\n          <Card className=\"text-center\" style={{ marginTop: '10px' }}>\n            <Card.Body>\n              <Card.Title>Your rank: 123</Card.Title>\n            </Card.Body>\n          </Card>\n\n        </Col>\n        <Col>\n\n          <Card style={{ height: '100%' }}>\n            <Card.Body>\n              <Card.Text>Name</Card.Text>\n            </Card.Body>\n          </Card>\n\n        </Col>\n      </Row>\n    );\n  }\n\n}\n\n/*class Bar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '',\n      height: '',\n      shift: ''\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Card className=\"text-center\" style={{ height: '50px', marginTop: this.state.shift, marginBottom: '5px' }}>\n          <Card.Header>\n            <Card.Title>Name</Card.Title>\n          </Card.Header>\n        </Card>\n        <Card className=\"text-center\" bg={this.state.color} style={{ height: this.state.height }}>\n          <Card.Body>\n            <Card.Text>test</Card.Text>\n          </Card.Body>\n        </Card>\n      </Container>\n    );\n  }\n\n  componentDidMount() {\n    switch (this.props.rank) {\n      case '1':\n        this.setState({\n          color: 'primary',\n          height: '200px'\n        })\n        break;\n\n      case '2':\n        this.setState({\n          color: 'danger',\n          height: '150px',\n          shift: '50px'\n        })\n        break;\n\n      case '3':\n        this.setState({\n          color: 'warning',\n          height: '100px',\n          shift: '100px'\n        })\n        break;\n    }\n  }\n}*/\n\nclass Tier extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tier: '',\n      tierText: '',\n      points: '',\n      color: ''\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: '10px' }}>\n        <div class=\"card-stats card\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <h5 class=\"text-uppercase text-muted mb-0 card-title\">{this.state.tierText}</h5>\n                <span class=\"h5 font-weight-bold mb-0\">{this.state.points} Points</span>\n              </div>\n              <div class=\"col-auto col\">\n                <IconContext.Provider value={{ color: this.state.color, size: '35px' }}>\n                  <div>\n                    <RiVipCrownFill />\n                  </div>\n                </IconContext.Provider>\n              </div>\n            </div>\n            <p class=\"mt-3 mb-0 text-muted text-sm\">\n              <span class=\"text-success mr-2\">3.48%</span>\n              <span class=\"text-nowrap\">Since last month</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    switch (this.props.tier) {\n      case '1':\n        this.setState({\n          tier: '1',\n          tierText: '1st place',\n          points: this.props.points,\n          color: 'gold'\n        })\n        break;\n      case '2':\n        this.setState({\n          tier: '2',\n          tierText: '2nd place',\n          points: this.props.points,\n          color: 'silver'\n        })\n        break;\n      case '3':\n        this.setState({\n          tier: '3',\n          tierText: '3rd place',\n          points: this.props.points,\n          color: '#B87333'\n        })\n        break;\n    }\n  }\n}\n\nexport default Ranking;","import React from 'react';\nimport server from 'socket.io-client';\nimport { Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst avatarChoices = [\n    'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1652945041.9401/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://i.pinimg.com/originals/7f/7c/1d/7f7c1dd0e47c39c330137a7258ae4bec.png',\n    'https://ih1.redbubble.net/image.1667529454.4344/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://ih1.redbubble.net/image.1652885213.4662/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://ih1.redbubble.net/image.1576587976.3410/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1573068447.8364/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1573043479.7857/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n];\n\nlet row1 = avatarChoices.slice(0, 4);\nlet row2 = avatarChoices.slice(4, 8);\n\nclass ProfileChoice extends React.Component {\n    render() {\n        return (\n            <div class=\"text-center\">\n                <Row>\n                    {row1.map((pic) => {\n                        return (\n                            <Col>\n                                <input type='radio' name='profile' value={pic} onChange={e => this.props.currentPic(e.target.value)} />\n                                <img alt=\"\" src={pic} width=\"75px\" height=\"75px\"></img>\n                            </Col>\n                        );\n                    })}\n                </Row>\n                <Row>\n                    {row2.map((pic) => {\n                        return (\n                            <Col>\n                                <input type='radio' name='profile' value={pic} onChange={e => this.props.currentPic(e.target.value)} />\n                                <img alt=\"\" src={pic} width=\"75px\" height=\"75px\"></img>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ProfileChoice;","import React from 'react';\nimport server from 'socket.io-client';\nimport { Image, Row, Col, Container, FormControl, InputGroup, Jumbotron, Button, Modal, Card } from 'react-bootstrap';\nimport { BsFillPersonFill, BsFillLockFill } from 'react-icons/bs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ProfileChoice from './ProfileChoice';\n\nclass LoginModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.passPic = this.passPic.bind(this);\n    this.state = {\n      form: {},\n      showProfileChoice: false,\n      currentPic: 'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n    }\n  }\n\n  handleChange(e) {\n    let fieldName = e.target.name;\n    let fleldVal = e.target.value;\n    this.setState({ form: { ...this.state.form, [fieldName]: fleldVal } })\n  }\n\n  login() {\n    //check with server\n    if (this.state.form.user === 'admin' && this.state.form.pass === '123') {\n      localStorage.removeItem('isLogin');\n      localStorage.setItem('isLogin', true);\n      this.props.logged();\n    } else {\n      localStorage.setItem('isLogin', false);\n    }\n  }\n\n  clickProfileChoice() {\n    this.setState({ showProfileChoice: !this.state.showProfileChoice })\n  }\n\n  passPic(url) {\n    this.setState({\n      currentPic: url\n    });\n    this.props.currentPic(url);\n    this.clickProfileChoice();\n  }\n\n  render() {\n    const modalProfileChoice = (\n      <Modal centered size=\"lg\" show=\"true\">\n        <Modal.Header><Modal.Title>Choose Profile Picture</Modal.Title></Modal.Header>\n        <Modal.Body>\n          <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n            <ProfileChoice currentPic={this.passPic} />\n          </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n        </Modal.Body>\n      </Modal>\n    );\n\n    return (\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col></Col>\n          <Col xs={6}>\n            <Jumbotron>\n              <div class=\"text-center\">\n                <Image style={{ width: '100%', marginBottom: '-30px' }} src=\"https://www.tgpl.in.th/wp-content/uploads/2016/01/battleship.png\" />\n\n                <h1>Eiei Battleship</h1>\n\n                <Button variant=\"outline-secondary\" style={{ marginBottom: '20px' }} onClick={() => this.clickProfileChoice()}>\n                  <Image style={{ width: '80px', height: '80px' }} src={this.state.currentPic} thumbnail />\n                </Button>\n\n                {this.state.showProfileChoice && modalProfileChoice}\n\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>\n                      <BsFillPersonFill />\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl name=\"user\" placeholder=\"Username\" onChange={e => this.handleChange(e)} />\n                </InputGroup>\n\n                <InputGroup className=\"mb-3\">\n                  <InputGroup.Prepend>\n                    <InputGroup.Text>\n                      <BsFillLockFill />\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl name=\"pass\" type=\"password\" placeholder=\"Password\" onChange={e => this.handleChange(e)} />\n                </InputGroup>\n\n                <Button variant=\"outline-secondary\" onClick={() => this.login()}>Login</Button>{' '}\n              </div>\n            </Jumbotron>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n\n    )\n  }\n}\n\nexport default LoginModal;","import React from 'react';\nimport server from 'socket.io-client';\nimport { Row, Col, Container, Card } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Menu from './component/Menu';\nimport Lobby from './component/Lobby';\nimport Ranking from './component/Ranking';\nimport LoginModal from './component/LoginModal';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logged = this.logged.bind(this);\n    this.picChange = this.picChange.bind(this);\n    this.state = {\n      user: {\n        profile: 'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n      }\n    }\n  }\n\n  isAuthenticated() {\n    if(localStorage.getItem('isLogin') === 'true'){\n      //auth check with server\n      //if valid then return true else false\n      return true;\n    }\n    return false;\n  }\n\n  logged() {\n    this.forceUpdate();\n    Swal.fire(\"hello\");\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.beforeunload.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.beforeunload.bind(this));\n  }\n\n  beforeunload(e) {\n    //disconnect code\n    //emit ออกไปเฉยๆว่า ออกเกม ให้ server handle room ด้วย\n  }\n\n  picChange(url){\n    this.setState({\n      user: {\n        profile: url\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container style={{ paddingTop: '2%' }}>\n        <Row>\n          {this.isAuthenticated() ? (<Home/>) : (<LoginModal logged={this.logged} currentPic={this.picChange}/>)}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Col>\n        <Menu />\n        <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n          <Card.Body>\n            <Router>\n              <Switch>\n                <Route path=\"/rank\">\n                  <Ranking />\n                </Route>\n                <Route path=\"/shop\">\n                  <h1>WIP</h1>\n                </Route>\n                <Route path=\"/\">\n                  <Lobby />\n                </Route>\n              </Switch>\n            </Router>\n          </Card.Body>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}