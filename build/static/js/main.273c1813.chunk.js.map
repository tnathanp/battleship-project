{"version":3,"sources":["connection.js","component/ProfileChoice.js","component/Menu.js","component/Lobby.js","component/Ranking.js","component/Login.js","component/Game.js","component/Shop.js","component/Admin.js","App.js","serviceWorker.js","index.js"],"names":["socket","server","localStorage","getItem","avatarChoices","row1","slice","row2","ProfileChoice","class","Row","map","pic","Col","Button","variant","onClick","props","currentPic","Image","style","width","height","src","thumbnail","React","Component","backgroundChoices","color","code","Menu","changeProfile","bind","state","redirect","lobby","shop","rank","admin","audio","Audio","user","name","profile","items","missile","glasses","isRefreshModal","showDropDown","showProfileSetting","showProfileChoice","showSongSetting","showBackgroundSetting","dest","this","setState","emit","document","body","backgroundImage","url","data","auth","Swal","fire","title","showConfirmButton","allowOutsideClick","willOpen","showLoading","n","aud","i","length","pause","currentTime","play","loop","removeItem","setItem","icon","timer","then","result","dismiss","DismissReason","close","window","location","reload","on","text","logout","modalProfileChoice","Modal","centered","size","show","backdrop","Header","Title","Body","Container","Card","Text","modalProfileSetting","className","Img","Footer","modalSongSetting","onHide","closeButton","controlSong","block","modalBackgroundSetting","backgroundChoice","changeBackground","Navbar","bg","expand","borderRadius","Brand","Toggle","aria-controls","Collapse","Nav","Link","navigate","to","display","alignItems","marginRight","NavDropdown","handleDropDown","drop","Item","Lobby","roomList","friendID","roomID","showInviteFriend","showCreateRoom","t","action","e","target","value","modalControl","id","req","myAuth","key","invite","createRoom","room","showDenyButton","confirmButtonText","denyButtonText","isConfirmed","modalInviteFriend","Form","Group","Label","Control","onChange","handleFriendID","onKeyPress","handleKey","placeholder","modalCreateRoom","handleRoomID","refresh","marginTop","marginBottom","each","joinRoom","Ranking","isLoaded","points","isMe","a","splice","tier","fontSize","ListGroup","item","Tier","tierText","Provider","Login","changePic","form","pass","fieldName","fleldVal","login","clickProfileChoice","logged","md","backgroundColor","InputGroup","Prepend","FormControl","handleChange","type","Game","hovered","secretSong","Array","fill","enemyData","chat","chatMsg","enemyName","seconds","isUsingMissile","score","enemyScore","isMyTurn","isPause","missileAvai","radarAvai","isPlanningStage","currentShipSize","shipAmount","horizontal","vertical","lastPlaced","controlButton","pos","indexes","shipSize","Math","floor","axis","newData","push","console","log","html","toRemove","pop","newAmount","interval","setInterval","tick","msg","getElementById","chatbox","scrollTop","offsetHeight","forceUpdate","send","board","row","elem","column","includes","background","opacity","plan","onMouseEnter","hoverHandle","onMouseLeave","hoveredHandle","game","disabled","cur","clearInterval","you","enemy","status","timerInterval","timerProgressBar","content","getContent","querySelector","textContent","ceil","getTimerLeft","willClose","payload","winner","imageUrl","imageWidth","imageHeight","loser","PlanningStage","xs","renderPlanBoard","changeAlign","next","back","GamingStage","resume","Badge","renderMyBoard","renderEnemyBoard","border","overflowY","handleChat","aria-describedby","Append","Subtitle","equipMissile","useGlasses","cancelMissile","paddingTop","frameborder","allowfullscreen","Shop","pocket","missileOwned","glassesOwned","num","fiveShotBuy","glassesBuy","Admin","showRoomID","controlRoomID","Table","responsive","bordered","hover","App","isInGame","joinedRoom","roomName","isAuthenticated","Home","path","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.273c1813.chunk.js","sourcesContent":["import server from 'socket.io-client';\nlet socket = server('https://battleship-server-a01.herokuapp.com?auth=' + localStorage.getItem('auth'));\nexport default socket;\n","import React from 'react';\nimport { Row, Col, Button, Image } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst avatarChoices = [\n    'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1652945041.9401/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://i.pinimg.com/originals/7f/7c/1d/7f7c1dd0e47c39c330137a7258ae4bec.png',\n    'https://ih1.redbubble.net/image.1667529454.4344/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://ih1.redbubble.net/image.1652885213.4662/st,small,507x507-pad,600x600,f8f8f8.jpg',\n    'https://ih1.redbubble.net/image.1576587976.3410/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1573068447.8364/st,small,507x507-pad,600x600,f8f8f8.u1.jpg',\n    'https://ih1.redbubble.net/image.1573043479.7857/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n];\n\nlet row1 = avatarChoices.slice(0, 4);\nlet row2 = avatarChoices.slice(4, 8);\n\nclass ProfileChoice extends React.Component {\n    render() {\n        return (\n            <div class=\"text-center\">\n                <Row>\n                    {row1.map(pic => {\n                        return (\n                            <Col>\n                                <Button variant=\"light\" onClick={() => this.props.currentPic(pic)}>\n                                    <Image style={{ width: '80px', height: '80px' }} src={pic} thumbnail />\n                                </Button>\n                            </Col>\n                        );\n                    })}\n                </Row>\n                <Row>\n                    {row2.map(pic => {\n                        return (\n                            <Col>\n                                <Button variant=\"light\" onClick={() => this.props.currentPic(pic)}>\n                                    <Image style={{ width: '80px', height: '80px' }} src={pic} thumbnail />\n                                </Button>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ProfileChoice;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Navbar, NavDropdown, Nav, Button, Modal, Card, Row, Col, Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { RiShoppingCart2Fill, RiShipLine, RiAdminFill } from 'react-icons/ri';\nimport { AiFillTrophy } from 'react-icons/ai';\nimport { FiSettings } from 'react-icons/fi';\nimport { HiHome } from 'react-icons/hi';\nimport { MdExitToApp } from 'react-icons/md';\nimport { BiGlasses } from 'react-icons/bi';\nimport { IoIosRocket } from 'react-icons/io';\nimport ProfileChoice from './ProfileChoice';\nimport './Menu.css';\n\nconst backgroundChoices = [\n    { color: 'Serenity & Rose quartz', code: 'linear-gradient(0deg, #f7cac9 0%, #b3cee5 100%)' },\n    { color: 'Candy', code: 'linear-gradient(43deg, #4158D0 0%, #C850C0 51%, #FFCC70 100%)' },\n    { color: 'Midnight', code: 'linear-gradient(225deg, #FF3CAC 0%, #784BA0 50%, #2B86C5 100%)' },\n    { color: 'Nature', code: 'linear-gradient(132deg, #F4D03F 0%, #16A085 100%)' }\n];\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.changeProfile = this.changeProfile.bind(this);\n        this.state = {\n            redirect: {\n                lobby: false,\n                shop: false,\n                rank: false,\n                admin: false\n            },\n            audio: [\n                new Audio('/Pirates Of The Caribbean Theme Song.mp3'),\n                new Audio('/Coffin Dance (Official Music Video HD).mp3'),\n                new Audio('/Pink Panther Theme Song.mp3')\n            ],\n            user: {\n                name: '',\n                profile: '',\n                items: {\n                    missile: 0,\n                    glasses: 0\n                }\n            },\n            isRefreshModal: false,\n            showDropDown: false,\n            showProfileSetting: false,\n            showProfileChoice: false,\n            showSongSetting: false,\n            showBackgroundSetting: false\n        }\n    }\n\n    navigate(dest) {\n        this.setState({\n            redirect: {\n                lobby: dest === 'lobby',\n                shop: dest === 'shop',\n                rank: dest === 'rank',\n                admin: dest === 'admin'\n            }\n        })\n    }\n\n    handleDropDown() {\n        if (this.state.showProfileSetting === true ||\n            this.state.showSongSetting === true ||\n            this.state.showBackgroundSetting === true) {\n\n            return false\n        }\n\n        socket.emit('request user data', localStorage.getItem('auth'));\n\n        this.setState({ showDropDown: !this.state.showDropDown })\n    }\n\n    showProfileSetting() {\n        this.setState({ showProfileSetting: !this.state.showProfileSetting });\n    }\n\n    showBackgroundSetting() {\n        this.setState({ showBackgroundSetting: !this.state.showBackgroundSetting });\n    }\n\n    changeBackground(color) {\n        document.body.style.backgroundImage = color;\n    }\n\n    showProfileChoice() {\n        this.setState({ showProfileChoice: !this.state.showProfileChoice });\n    }\n\n    changeProfile(url) {\n        this.setState({\n            isRefreshModal: true\n        })\n        let data = {\n            auth: localStorage.getItem('auth'),\n            url: url\n        }\n        socket.emit('change profile', data);\n        Swal.fire({\n            title: 'Loading',\n            showConfirmButton: false,\n            allowOutsideClick: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        })\n        this.showProfileChoice();\n        this.showProfileSetting();\n    }\n\n    showSongSetting() {\n        this.setState({ showSongSetting: !this.state.showSongSetting });\n    }\n\n    showBackgroundSetting() {\n        this.setState({ showBackgroundSetting: !this.state.showBackgroundSetting });\n    }\n\n    changeBackground(color) {\n        document.body.style.backgroundImage = color;\n    }\n\n    controlSong(n) {\n        let aud = this.state.audio;\n        for (let i = 0; i < aud.length; i++) {\n            aud[i].pause();\n            aud[i].currentTime = 0;\n            if (i === n) {\n                aud[i].play();\n                aud[i].loop = true;\n            }\n        }\n    }\n\n    logout() {\n        localStorage.removeItem('isLogin');\n        localStorage.setItem('isLogin', false);\n        socket.emit('offline', localStorage.getItem('auth'));\n        localStorage.removeItem('auth');\n        Swal.fire({\n            title: 'Successfully logged out',\n            icon: 'success',\n            showConfirmButton: false,\n            allowOutsideClick: false,\n            timer: 1000\n        }).then((result) => {\n            if (result.dismiss === Swal.DismissReason.timer) {\n                Swal.close();\n                window.location.reload(false);\n            }\n        });\n    }\n\n    componentDidMount() {\n        socket.on('response user data', data => {\n            this.setState({\n                user: {\n                    name: data.user,\n                    profile: data.profile,\n                    items: {\n                        missile: data.items.missile,\n                        glasses: data.items.glasses\n                    }\n                }\n            })\n            if (this.state.isRefreshModal === true) {\n                Swal.close();\n                this.showProfileSetting();\n                this.setState({ isRefreshModal: false });\n            }\n        })\n\n        socket.on('success change profile', () => {\n            socket.emit('request user data', localStorage.getItem('auth'));\n        })\n\n        socket.on('get kicked', () => {\n            Swal.fire({\n                title: 'Get kicked',\n                text: 'You get kicked from the admin',\n                timer: 2000,\n                icon: 'warning',\n                showConfirmButton: false,\n                allowOutsideClick: false\n            }).then(result => {\n                Swal.close();\n                this.logout();\n            })\n        })\n    }\n\n    render() {\n\n        const modalProfileChoice = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Choose Profile Picture</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <ProfileChoice currentPic={this.changeProfile} />\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        const modalProfileSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Your profile</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Row className=\"justify-content-md-center\">\n                        <Card style={{ width: '15rem' }}>\n                            <Card.Img variant=\"top\" src={this.state.user.profile} />\n                            <Card.Body>\n                                <Row className=\"justify-content-md-center\">\n                                    <Card.Title>{this.state.user.name}</Card.Title>\n                                </Row>\n                                <Card>\n                                    <Card.Header>\n                                        <Row className=\"justify-content-md-center\">\n                                            <Card.Title>Inventory</Card.Title>\n                                        </Row>\n                                        <Row className=\"justify-content-md-center\">\n                                            <Col>\n                                                <IoIosRocket /> : {this.state.user.items.missile}\n                                            </Col>\n                                            <Col>\n                                                <BiGlasses /> : {this.state.user.items.glasses}\n                                            </Col>\n                                        </Row>\n                                    </Card.Header>\n                                </Card>\n                            </Card.Body>\n                        </Card>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={() => this.showProfileChoice()}>Change picture</Button>\n                    <Button variant=\"secondary\" onClick={() => this.showProfileSetting()}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        const modalSongSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\" onHide={() => this.showSongSetting()}>\n                <Modal.Header closeButton><Modal.Title>Song Setting</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Body><Card.Text>\n                        <Button variant=\"light\" onClick={() => this.controlSong(0)} block>Agressive</Button>\n                        <Button variant=\"light\" onClick={() => this.controlSong(1)} block>Dance</Button>\n                        <Button variant=\"light\" onClick={() => this.controlSong(2)} block>Mystery</Button>\n                        <Button variant=\"dark\" onClick={() => this.controlSong(3)} block>Turn Off</Button>\n                    </Card.Text></Card.Body></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        const modalBackgroundSetting = (\n            <Modal centered size=\"sm\" show=\"true\" backdrop=\"static\" onHide={() => this.showBackgroundSetting()}>\n                <Modal.Header closeButton><Modal.Title>Background Setting</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Body><Card.Text>\n                        {backgroundChoices.map(backgroundChoice => {\n                            return (\n                                <Button block variant=\"info\" onClick={() => this.changeBackground(backgroundChoice.code)}>\n                                    {backgroundChoice.color}\n                                </Button>\n                            );\n                        })}\n                    </Card.Text></Card.Body></Card></Col></Row></Container>\n                </Modal.Body>\n            </Modal>\n        );\n\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ borderRadius: '10px 10px 0 0' }}>\n                <Navbar.Brand><RiShipLine />Eiei Battleship<RiShipLine /></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav>\n                        <Nav.Link onClick={() => this.navigate('lobby')}>\n                            {this.state.redirect.lobby && (<Redirect to='/' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <HiHome style={{ marginRight: '5px' }} /> Lobby\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('shop')}>\n                            {this.state.redirect.shop && (<Redirect to='/shop' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <RiShoppingCart2Fill style={{ marginRight: '5px' }} />  Shop\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('rank')}>\n                            {this.state.redirect.rank && (<Redirect to='/rank' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <AiFillTrophy style={{ marginRight: '5px' }} />Rank\n                            </div>\n                        </Nav.Link>\n                        <Nav.Link onClick={() => this.navigate('admin')}>\n                            {this.state.redirect.admin && (<Redirect to='/admin' />)}\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <RiAdminFill style={{ marginRight: '5px' }} />Admin\n                            </div>\n                        </Nav.Link>\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        <NavDropdown\n                            show={this.state.showDropDown}\n                            onClick={() => this.handleDropDown()}\n                            title={<div style={{ display: 'flex', alignItems: 'center' }}>\n                                <FiSettings style={{ marginRight: '5px' }} />Settings\n                                    </div>}\n                            drop='left'\n                        >\n                            <NavDropdown.Item onClick={() => this.showProfileSetting()}>Profile</NavDropdown.Item>\n                            {this.state.showProfileSetting && modalProfileSetting}\n                            {this.state.showProfileChoice && modalProfileChoice}\n                            <NavDropdown.Item onClick={() => this.showBackgroundSetting()}>Background</NavDropdown.Item>\n                            {this.state.showBackgroundSetting && modalBackgroundSetting}\n                            <NavDropdown.Item onClick={() => this.showSongSetting()}>Song</NavDropdown.Item>\n                            {this.state.showSongSetting && modalSongSetting}\n                            <NavDropdown.Item onClick={() => this.logout()}>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <MdExitToApp style={{ marginRight: '5px' }} />Logout\n                                </div>\n                            </NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default Menu;\n","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container, Modal, Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BsPersonPlusFill, BsFillPlusSquareFill, BsArrowClockwise } from \"react-icons/bs\";\nimport './Lobby.css';\n\nclass Lobby extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            roomList: [],\n            friendID: '',\n            roomID: '',\n            showInviteFriend: false,\n            showCreateRoom: false\n        }\n    }\n\n    modalControl(t, action) {\n        switch (t) {\n            case 'if':\n                this.setState({ showInviteFriend: action });\n                break;\n            case 'cr':\n                this.setState({ showCreateRoom: action });\n                break;\n        }\n    }\n\n    handleFriendID(e) {\n        this.setState({\n            friendID: e.target.value\n        })\n    }\n\n    handleRoomID(e) {\n        this.setState({\n            roomID: e.target.value\n        })\n    }\n\n    createRoom() {\n        this.modalControl('cr', false);\n        socket.emit('create room', this.state.roomID);\n    }\n\n    joinRoom(id) {\n        socket.emit('join room', id);\n    }\n\n    invite() {\n        this.modalControl('if', false);\n        let req = {\n            id: this.state.friendID,\n            myAuth: localStorage.getItem('auth')\n        }\n        socket.emit('invite friend', req);\n    }\n\n    refresh() {\n        socket.emit('get room list');\n    }\n\n    handleKey(e, t) {\n        if (e.key === 'Enter') {\n            if (t === 'if') {\n                this.invite();\n            } else if (t === 'cr') {\n                this.createRoom();\n            }\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('get room list');\n\n        socket.on('success create room', id => {\n            Swal.fire({\n                title: 'Waiting for the opponent',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading();\n                }\n            })\n        })\n\n        socket.on('receive invitation', room => {\n            Swal.fire({\n                text: 'You are invited to join a room',\n                showDenyButton: true,\n                confirmButtonText: 'Accept',\n                denyButtonText: 'Decline'\n            }).then(result => {\n                if (result.isConfirmed) {\n                    socket.emit('join invitation', room);\n                } else {\n                    socket.emit('reject invitation', room);\n                }\n            })\n        })\n\n        socket.on('join invitation fail', () => {\n            Swal.fire({\n                icon: 'error',\n                text: \"Rejected\"\n            })\n        })\n\n        socket.on('friend id not found', () => {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops',\n                text: \"Friend's ID not found\"\n            })\n        })\n\n        socket.on('friend already in a room', () => {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops',\n                text: \"Your friend is currently in a room\"\n            })\n        })\n\n        socket.on('room id already exist', () => {\n            Swal.fire({\n                title: 'Room name already exists',\n                icon: 'error'\n            })\n        })\n\n        socket.on('update room list', data => {\n            this.setState({\n                roomList: data\n            })\n        })\n\n    }\n\n    render() {\n        const modalInviteFriend = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Invite Friend</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            <Form.Group>\n                                <Form.Label>Friend ID</Form.Label>\n                                <Form.Control onChange={e => this.handleFriendID(e)} onKeyPress={e => this.handleKey(e, 'if')} placeholder=\"Enter your friend's ID\" />\n                            </Form.Group>\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('if', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.invite()}>Send Invitation</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        const modalCreateRoom = (\n            <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n                <Modal.Header><Modal.Title>Create Room</Modal.Title></Modal.Header>\n                <Modal.Body>\n                    <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n                        <Form>\n                            Room name\n                        <Form.Control onChange={e => this.handleRoomID(e)} onKeyPress={e => this.handleKey(e, 'cr')} placeholder=\"Enter room name\" />\n                        </Form>\n                    </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => this.modalControl('cr', false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => this.createRoom()}>Create</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <Card style={{ width: '100%', height: '100%' }}>\n                            <Card.Header>\n                                Room List\n                                <Button className=\"float-right\" variant=\"warning\" size=\"sm\" onClick={() => this.refresh()}><BsArrowClockwise style={{ marginRight: '3px' }} /> refresh</Button>\n                            </Card.Header>\n                            <Card.Body class=\"text-center\">\n                                <Card.Text>\n                                    {this.state.roomList.length === 0 ? (<Card.Text style={{ marginTop: '20px', marginBottom: '20px' }}>No available room</Card.Text>) : false}\n                                    {this.state.roomList.map(each => (\n                                        <Button block variant=\"light\" onClick={() => this.joinRoom(each.roomID)}>{each.roomID}</Button>)\n                                    )}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Footer className=\"text-center\">\n\n                                <Button variant=\"primary\" onClick={() => this.modalControl('cr', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsFillPlusSquareFill style={{ marginRight: '10px' }} /> Create Room\n                                    </div>\n                                </Button>\n\n                                {' '}\n\n                                <Button variant=\"info\" onClick={() => this.modalControl('if', true)}>\n                                    <div style={{ display: 'flex', alignItems: \"center\" }}>\n                                        <BsPersonPlusFill style={{ marginRight: '10px' }} /> Invite Friend\n                                    </div>\n                                </Button>\n\n                                {this.state.showInviteFriend && modalInviteFriend}\n                                {this.state.showCreateRoom && modalCreateRoom}\n\n                            </Card.Footer>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Lobby;\n","import React from 'react';\nimport socket from '../connection';\nimport { Row, Col, Card, Container, ListGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { IconContext } from 'react-icons';\nimport { RiVipCrownFill } from 'react-icons/ri';\nimport Swal from 'sweetalert2';\n\nclass Ranking extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoaded: false\n    }\n  }\n\n  componentDidMount() {\n    socket.emit('request rank data', localStorage.getItem('auth'));\n\n    socket.on('response rank data', data => {\n      this.setState({\n        data: data,\n        isLoaded: true\n      })\n    })\n  }\n\n  render() {\n    let result;\n    if (this.state.isLoaded === false) {\n      Swal.fire({\n        title: 'Loading',\n        allowOutsideClick: false,\n        showConfirmButton: false,\n        willOpen: () => {\n          Swal.showLoading()\n        }\n      })\n    } else {\n      let rank = 0;\n      let points = 0;\n      for (let i = 0; i < this.state.data.length; i++) {\n        if (this.state.data[i].isMe === true) {\n          rank = this.state.data[i].rank\n          points = this.state.data[i].points\n        }\n      }\n      let a = [];\n      for (let i = 3; i < this.state.data.length; i++) {\n        a.splice(i - 3, 0, this.state.data[i]);\n      }\n      Swal.close();\n      result = (\n        <Row>\n          <Col>\n\n            <Tier tier=\"1\" points={this.state.data[0].points} name={this.state.data[0].name} />\n            <Tier tier=\"2\" points={this.state.data[1].points} name={this.state.data[1].name} />\n            <Tier tier=\"3\" points={this.state.data[2].points} name={this.state.data[2].name} />\n\n            <Card className=\"text-center\" style={{ marginTop: '10px' }}>\n              <Card.Body>\n                <Row>\n                  <Col>\n                    Your points\n                    <Card.Text style={{ fontSize: '25px' }}>{points}</Card.Text>\n                  </Col>\n                  <Col>\n                    Your rank\n                    <Card.Text style={{ fontSize: '25px' }}>{rank}</Card.Text>\n                  </Col>\n                </Row>\n              </Card.Body>\n            </Card>\n\n          </Col>\n          <Col>\n\n            <Card style={{ height: '100%' }}>\n              <Card.Body>\n                <Card.Text>\n                  <ListGroup>\n                    {\n                      a.map((item, i) => {\n                        return (\n                          <ListGroup.Item key={i}>\n                            <Row>\n                              <Col>\n                                <h6 class=\"text-uppercase text-muted mb-0 card-title\">Rank: {item.rank}</h6>\n                                <h6 >{item.name}</h6>\n                              </Col>\n                              <Col>\n                                <h6 style={{ marginTop: '20px' }}>{item.points} Points</h6>\n                              </Col>\n                            </Row>\n                          </ListGroup.Item>\n                        )\n                      })\n                    }\n                  </ListGroup>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n\n          </Col>\n        </Row>\n      );\n    }\n\n    return (\n      <Container>\n        {result}\n      </Container>\n    );\n  }\n\n}\n\nclass Tier extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tier: '',\n      tierText: '',\n      points: '',\n      color: ''\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: '10px' }}>\n        <div class=\"card-stats card\">\n          <div class=\"card-body\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <h5 class=\"text-uppercase text-muted mb-0 card-title\">{this.state.tierText}</h5>\n                <span class=\"h5 font-weight-bold mb-0\">{this.props.name}</span>\n              </div>\n              <div class=\"col-auto col\">\n                <IconContext.Provider value={{ color: this.state.color, size: '35px' }}>\n                  <div>\n                    <RiVipCrownFill />\n                  </div>\n                </IconContext.Provider>\n              </div>\n            </div>\n            <p class=\"mt-3 mb-0 text-muted text-sm\">\n              <span class=\"text-success mr-2\">{this.props.points} Points</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    switch (this.props.tier) {\n      case '1':\n        this.setState({\n          tier: '1',\n          tierText: '1st place',\n          points: this.props.points,\n          color: 'gold'\n        })\n        break;\n      case '2':\n        this.setState({\n          tier: '2',\n          tierText: '2nd place',\n          points: this.props.points,\n          color: 'silver'\n        })\n        break;\n      case '3':\n        this.setState({\n          tier: '3',\n          tierText: '3rd place',\n          points: this.props.points,\n          color: '#B87333'\n        })\n        break;\n    }\n  }\n}\n\nexport default Ranking;","import React from 'react';\nimport socket from '../connection';\nimport { Image, Row, Col, Container, FormControl, InputGroup, Button, Modal, Card } from 'react-bootstrap';\nimport { BsFillPersonFill, BsFillLockFill } from 'react-icons/bs';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Swal from 'sweetalert2';\nimport ProfileChoice from './ProfileChoice';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changePic = this.changePic.bind(this);\n    this.state = {\n      form: {\n        user: '',\n        pass: '',\n        profile: 'https://ih1.redbubble.net/image.1573052278.8041/st,small,507x507-pad,600x600,f8f8f8.u1.jpg'\n      },\n      showProfileChoice: false\n    }\n  }\n\n  handleChange(e) {\n    let fieldName = e.target.name;\n    let fleldVal = e.target.value;\n    this.setState({ form: { ...this.state.form, [fieldName]: fleldVal } })\n  }\n\n  handleKey(e) {\n    if (e.key === 'Enter') {\n      this.login();\n    }\n  }\n\n  login() {\n    if (this.state.form.user === '' || this.state.form.pass === '') {\n      Swal.fire({\n        title: 'Empty field',\n        icon: 'error'\n      });\n      localStorage.setItem('isLogin', false);\n    } else {\n      Swal.fire({\n        title: 'Loading',\n        allowOutsideClick: false,\n        willOpen: () => {\n          Swal.showLoading()\n        }\n      })\n      socket.emit('login', this.state.form);\n    }\n  }\n\n  clickProfileChoice() {\n    this.setState({ showProfileChoice: !this.state.showProfileChoice })\n  }\n\n  changePic(url) {\n    this.setState({\n      form: {\n        user: this.state.form.user,\n        pass: this.state.form.pass,\n        profile: url\n      }\n    });\n    this.clickProfileChoice();\n  }\n\n  componentDidMount() {\n    socket.on('success login', auth => {\n      Swal.close();\n      localStorage.removeItem('auth');\n      localStorage.setItem('auth', auth);\n      localStorage.removeItem('isLogin');\n      localStorage.setItem('isLogin', true);\n      this.props.logged(this.state.form.user);\n    });\n\n    socket.on('fail login', () => {\n      Swal.close();\n      Swal.fire({\n        title: 'Failed',\n        text: 'Wrong username or password',\n        icon: 'error'\n      });\n      localStorage.setItem('isLogin', false);\n    })\n\n  }\n\n  render() {\n    const modalProfileChoice = (\n      <Modal centered size=\"lg\" show=\"true\" backdrop=\"static\">\n        <Modal.Header><Modal.Title>Choose Profile Picture</Modal.Title></Modal.Header>\n        <Modal.Body>\n          <Container><Row><Col><Card><Card.Header><Card.Body><Card.Text>\n            <ProfileChoice currentPic={this.changePic} />\n          </Card.Text></Card.Body></Card.Header></Card></Col></Row></Container>\n        </Modal.Body>\n      </Modal>\n    );\n\n    return (\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col></Col>\n          <Col md={6}>\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '10px' }}>\n              <div class=\"text-center\">\n                <Card.Body>\n\n                  <Image style={{ width: '100%', marginBottom: '-30px' }} src=\"https://www.tgpl.in.th/wp-content/uploads/2016/01/battleship.png\" />\n\n                  <h1>Eiei Battleship</h1>\n\n                </Card.Body>\n                <Card.Footer>\n                  <Row>\n                    <Col md={4}>\n\n                      <Button variant=\"outline-secondary\" size=\"sm\" style={{ marginBottom: '20px' }} onClick={() => this.clickProfileChoice()}>\n                        <Image style={{ width: '80px', height: '80px', marginTop: '5px', marginBottom: '5px' }} src={this.state.form.profile} thumbnail />\n                      </Button>\n                      {this.state.showProfileChoice && modalProfileChoice}\n\n                    </Col>\n                    <Col>\n\n                      <InputGroup className=\"mb-3\" style={{ marginTop: '10px' }}>\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <BsFillPersonFill />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl name=\"user\" placeholder=\"Username\" size=\"md\" onChange={e => this.handleChange(e)} />\n                      </InputGroup>\n\n                      <InputGroup className=\"mb-3\">\n                        <InputGroup.Prepend>\n                          <InputGroup.Text>\n                            <BsFillLockFill />\n                          </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <FormControl name=\"pass\" type=\"password\" placeholder=\"Password\" onChange={e => this.handleChange(e)} onKeyPress={e => this.handleKey(e)} />\n                      </InputGroup>\n                    </Col>\n                  </Row>\n                  <Button block variant=\"success\" onClick={() => this.login()}>Login</Button>\n                </Card.Footer>\n              </div>\n            </Card>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport socket from '../connection';\nimport { Row, Col, Container, Card, Navbar, Nav, Button, InputGroup, FormControl, Badge } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Swal from 'sweetalert2';\nimport { BsFillPauseFill, BsFillPlayFill } from 'react-icons/bs';\nimport { IoIosRocket } from 'react-icons/io';\nimport { BiGlasses, BiTargetLock } from 'react-icons/bi';\nimport { TiWaves } from 'react-icons/ti';\n\nimport './Game.css';\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            //Shared things\n            hovered: [],\n            secretSong: false,\n            //Data\n            data: new Array(64).fill(0),\n            enemyData: new Array(64).fill(0),\n            //Gaming things\n            chat: [],\n            chatMsg: '',\n            name: '',\n            enemyName: '',\n            seconds: 10,\n            isUsingMissile: false,\n            score: 0,\n            enemyScore: 0,\n            isMyTurn: false,\n            isPause: false,\n            missileAvai: 0,\n            radarAvai: 0,\n            audio: [\n                new Audio('/explode.mp3'),\n                new Audio('/missile.mp3'),\n                new Audio('/radar.mp3'),\n                new Audio('/win.mp3'),\n                new Audio('/lose.mp3')\n            ],\n            //Planning things\n            isPlanningStage: true,\n            currentShipSize: 4,\n            shipAmount: 1,\n            horizontal: true,\n            vertical: false,\n            lastPlaced: [],\n            controlButton: false\n        }\n    }\n\n    hoverHandle(pos) {\n        let shipSize = this.state.currentShipSize;\n        if (this.state.isPlanningStage) {\n            if (this.state.horizontal) {\n                if (pos % 8 + shipSize < 9) {\n                    let indexes = new Array(shipSize).fill(pos);\n                    let n = 0;\n                    indexes = indexes.map(each => {\n                        n++;\n                        return each + n - 1;\n                    })\n                    this.setState({\n                        hovered: indexes\n                    })\n                }\n            } else if (this.state.vertical) {\n                if (Math.floor(pos / 8) + shipSize < 9) {\n                    let indexes = new Array(shipSize).fill(pos);\n                    let n = 0;\n                    indexes = indexes.map(each => {\n                        n++;\n                        return each + 8 * (n - 1);\n                    })\n                    this.setState({\n                        hovered: indexes\n                    })\n                }\n            }\n        } else {\n            let indexes;\n            if (this.state.isUsingMissile) {\n                if (pos <= 6 && pos >= 0) {\n                    indexes = [pos - 1, pos, pos + 1, pos + 8];\n                } else if (pos >= 57 && pos <= 63) {\n                    indexes = [pos - 8, pos - 1, pos, pos + 1];\n                } else if (pos % 8 === 0) {\n                    indexes = [pos - 8, pos, pos + 1, pos + 8];\n                } else if ((pos + 1) % 8 === 0) {\n                    indexes = [pos - 8, pos - 1, pos, pos + 8];\n                } else {\n                    indexes = [pos - 8, pos - 1, pos, pos + 1, pos + 8];\n                }\n            } else {\n                indexes = [pos];\n            }\n            this.setState({\n                hovered: indexes\n            })\n        }\n    }\n\n    hoveredHandle(pos) {\n        this.setState({\n            hovered: []\n        })\n    }\n\n    changeAlign(axis) {\n        if (axis === 'hori') {\n            this.setState({\n                horizontal: true,\n                vertical: false\n            })\n        } else if (axis === 'vert') {\n            this.setState({\n                horizontal: false,\n                vertical: true\n            })\n        }\n    }\n\n    fill(pos, size, axis) {\n        let result = false;\n        if (axis === 'hori') {\n            //Horizontal\n\n            //Check if available\n            for (let i = pos; i < pos + size; i++) {\n                if (this.state.data[i] === 1) {\n                    return result\n                }\n            }\n            //Fill data with ship\n            let newData = this.state.data.slice();\n            for (let i = pos; i < pos + size; i++) {\n                newData[i] = 1;\n            }\n            this.setState({\n                data: newData\n            })\n            this.state.lastPlaced.push({ pos: pos, size: size, axis: 'hori' });\n            this.setState({\n                controlButton: this.state.lastPlaced.length !== 0\n            })\n            return true\n\n        } else if (axis === 'vert') {\n            //Vertical\n\n            //Check if available\n            for (let i = 0; i < size; i++) {\n                if (this.state.data[pos + 8 * i] === 1) {\n                    return result\n                }\n            }\n            //Fill data with ship\n            let newData = this.state.data.slice();\n            for (let i = 0; i < size; i++) {\n                newData[pos + 8 * i] = 1;\n            }\n            this.setState({\n                data: newData\n            })\n            this.state.lastPlaced.push({ pos: pos, size: size, axis: 'vert' });\n            this.setState({\n                controlButton: this.state.lastPlaced.length !== 0\n            })\n            return true\n\n        }\n    }\n\n    plan(pos) {\n        if (this.state.shipAmount !== 0) {\n            let shipSize = this.state.currentShipSize;\n            if (this.state.horizontal) {\n                if (pos % 8 + shipSize < 9) {\n                    if (this.fill(pos, shipSize, 'hori')) {\n                        console.log('Done');\n                        this.setState({\n                            shipAmount: this.state.shipAmount - 1\n                        })\n                    } else {\n                        console.log('Unable');\n                    }\n                }\n            } else if (this.state.vertical) {\n                if (this.fill(pos, shipSize, 'vert')) {\n                    console.log('Done');\n                    this.setState({\n                        shipAmount: this.state.shipAmount - 1\n                    })\n                } else {\n                    console.log('Unable');\n                }\n            }\n        } else {\n            Swal.fire({\n                html: 'You have no available ship left for size <b>' + this.state.currentShipSize + '</b>',\n                icon: 'warning'\n            })\n        }\n    }\n\n    back() {\n        let toRemove = this.state.lastPlaced.pop();\n        let pos = toRemove.pos;\n        let size = toRemove.size;\n        if (toRemove.axis === 'hori') {\n            let newData = this.state.data.slice();\n            for (let i = pos; i < pos + size; i++) {\n                newData[i] = 0;\n            }\n            this.setState({\n                data: newData,\n                shipAmount: this.state.shipAmount + 1\n            })\n        } else if (toRemove.axis === 'vert') {\n            let newData = this.state.data.slice();\n            for (let i = 0; i < size; i++) {\n                newData[pos + 8 * i] = 0;\n            }\n            this.setState({\n                data: newData,\n                shipAmount: this.state.shipAmount + 1\n            })\n        }\n        this.setState({\n            controlButton: this.state.lastPlaced.length !== 0\n        })\n    }\n\n    next() {\n        let shipSize = this.state.currentShipSize;\n        if (this.state.shipAmount === 0 && this.state.currentShipSize !== 1) {\n            let newAmount = 0;\n            if (shipSize === 4) newAmount = 2;\n            else if (shipSize === 3) newAmount = 3;\n            else if (shipSize === 2) newAmount = 4;\n            this.setState({\n                currentShipSize: shipSize - 1,\n                shipAmount: newAmount,\n                controlButton: false,\n                lastPlaced: []\n            })\n        } else {\n            if (this.state.currentShipSize === 1 && this.state.shipAmount === 0) {\n                socket.emit('send ship data', { data: this.state.data, auth: localStorage.getItem('auth'), room: this.props.room });\n                Swal.fire({\n                    title: 'Waiting for the opponent',\n                    allowOutsideClick: false,\n                    showConfirmButton: false,\n                    willOpen: () => {\n                        Swal.showLoading();\n                    }\n                })\n            } else {\n                Swal.fire({\n                    html: 'You have <b>' + this.state.shipAmount + '</b> ship left to be placed',\n                    icon: 'warning'\n                })\n            }\n        }\n    }\n\n    game(pos) {\n        let posCond = this.state.enemyData[pos] === 0 || this.state.enemyData[pos] === 8 || this.state.enemyData[pos] === 9;\n        if (posCond && this.state.isMyTurn) {\n            socket.emit('shot', {\n                target: this.state.isUsingMissile ? this.state.hovered : [pos],\n                missile: this.state.isUsingMissile,\n                room: this.props.room,\n                auth: localStorage.getItem('auth')\n            });\n            if (this.state.isUsingMissile) {\n                this.setState({\n                    missileAvai: 0,\n                    isUsingMissile: false\n                })\n                this.state.audio[1].currentTime = 0;\n                this.state.audio[1].play();\n            } else {\n                this.state.audio[0].currentTime = 0;\n                this.state.audio[0].play();\n            }\n        }\n    }\n\n    pause() {\n        Swal.fire({\n            title: 'Waiting for opponent decision',\n            allowOutsideClick: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        })\n        socket.emit('pause request', { name: this.state.name, room: this.props.room });\n    }\n\n    resume() {\n        if (this.state.isMyTurn) {\n            this.interval = setInterval(() => this.tick(), 1000);\n        }\n        this.setState({\n            isPause: false\n        })\n        socket.emit('resume game', this.props.room);\n    }\n\n    handleChat(e) {\n        this.setState({\n            chatMsg: e.target.value\n        })\n    }\n\n    send() {\n        socket.emit('send chat', { name: this.state.name, msg: this.state.chatMsg, room: this.props.room });\n        let chatInput = document.getElementById('chat-input');\n        chatInput.value = '';\n        this.state.chat.push(this.state.name + ': ' + this.state.chatMsg);\n        let chatbox = document.getElementById(\"chat-box\");\n        chatbox.scrollTop = chatbox.offsetHeight;\n        this.forceUpdate();\n    }\n\n    handleKey(e) {\n        if (e.key === 'Enter') {\n            this.send();\n        }\n    }\n\n    renderPlanBoard() {\n        let board = []\n        for (let row = 1; row <= 8; row++) {\n            let elem = []\n            for (let column = 1; column <= 8; column++) {\n                let pos = 8 * (row - 1) + (column - 1);\n                elem.push((\n                    <button\n                        className=\"psquare\"\n                        style={\n                            this.state.hovered.includes(pos)\n                                ?\n                                { background: '#ecb865', opacity: '0.5' }\n                                :\n                                this.state.data[pos] === 1 ? { background: '#fbc9be' } : {}\n                        }\n                        onClick={() => this.plan(pos)}\n                        onMouseEnter={() => this.hoverHandle(pos)}\n                        onMouseLeave={() => this.hoveredHandle(pos)}\n                    />\n                ));\n            }\n            board.push(elem);\n        }\n        return board;\n    }\n\n    renderEnemyBoard() {\n        let board = []\n        for (let row = 1; row <= 8; row++) {\n            let elem = []\n            for (let column = 1; column <= 8; column++) {\n                let pos = 8 * (row - 1) + (column - 1);\n                elem.push((\n                    <button\n                        className=\"square\"\n                        style={\n                            this.state.hovered.includes(pos)\n                                ?\n                                this.state.isMyTurn ? { background: '#ecb865' } :\n                                    this.state.enemyData[pos] === 2 ? { background: '#6A5ACD' } :\n                                        this.state.enemyData[pos] === 3 ? { background: '#7B68EE' } : {}\n                                :\n                                this.state.enemyData[pos] === 2 ? { background: '#6A5ACD' } :\n                                    this.state.enemyData[pos] === 3 ? { background: '#7B68EE' } : {}\n                        }\n                        onClick={() => this.game(pos)}\n                        disabled={this.state.isPause}\n                        onMouseEnter={() => this.hoverHandle(pos)}\n                        onMouseLeave={() => this.hoveredHandle(pos)}\n                    >{this.state.enemyData[pos] === 2\n                        ?\n                        (<>X</>)\n                        :\n                        this.state.enemyData[pos] === 8 ? (<BiTargetLock />) :\n                            this.state.enemyData[pos] === 9 ? (<TiWaves />) : (<></>)\n                        }\n                    </button>\n                ));\n            }\n            board.push(elem);\n        }\n        return board;\n    }\n\n    renderMyBoard() {\n        let board = []\n        for (let row = 1; row <= 8; row++) {\n            let elem = []\n            for (let column = 1; column <= 8; column++) {\n                let pos = 8 * (row - 1) + (column - 1);\n                elem.push((\n                    <button\n                        className=\"square\"\n                        style={\n                            this.state.data[pos] === 1\n                                ?\n                                { background: '#fbc9be' }\n                                :\n                                this.state.data[pos] === 2 ? { background: '#6A5ACD' } :\n                                    this.state.data[pos] === 3 ? { background: '#7B68EE' } : {}\n                        }\n                        disabled=\"true\"\n                    >{this.state.data[pos] === 2 ? (<>X</>) : (<></>)}</button>\n                ));\n            }\n            board.push(elem);\n        }\n        return board;\n    }\n\n    equipMissile() {\n        this.setState({\n            isUsingMissile: true\n        });\n    }\n\n    cancelMissile() {\n        this.setState({\n            isUsingMissile: false\n        })\n    }\n\n    useGlasses() {\n        socket.emit('use glasses', { room: this.props.room, auth: localStorage.getItem('auth') });\n        this.state.audio[2].currentTime = 0;\n        this.state.audio[2].play();\n        this.setState({\n            radarAvai: this.state.radarAvai - 1\n        })\n    }\n\n    tick() {\n        let cur = this.state.seconds;\n        this.setState({\n            seconds: cur - 1\n        })\n\n        if (this.state.seconds === 0) {\n            clearInterval(this.interval)\n            socket.emit('timeout', this.props.room);\n            this.setState({\n                isMyTurn: false\n            })\n        }\n\n        if (this.state.seconds < 0) {\n            clearInterval(this.interval)\n            this.setState({\n                seconds: 0,\n                isMyTurn: false\n            })\n        }\n    }\n\n    componentDidMount() {\n        Swal.fire({\n            title: 'Welcome to the game',\n            html: '<a>In this stage, place your ship on the grid then press <b>\\'Next\\'</b> after you have placed all the ship of that <b>particular size</b></a>'\n        }).then(result => {\n            Swal.fire({\n                title: 'Warning',\n                html: '<p>Once you press <b>\\'Next\\'</b>, you can\\'t go back to rearrange your ship in previous size</p>',\n                icon: 'warning'\n            })\n        })\n\n        socket.emit('request user data', localStorage.getItem('auth'));\n\n        socket.on('response user data', data => {\n            if (data.items.missile >= 1) {\n                this.setState({\n                    missileAvai: 1\n                })\n            }\n            if (data.items.glasses === 1) {\n                this.setState({\n                    radarAvai: 1\n                })\n            } else if (data.items.glasses >= 2) {\n                this.setState({\n                    radarAvai: 2\n                })\n            }\n        })\n\n        socket.on('name data', data => {\n            this.setState({\n                name: data.you,\n                enemyName: data.enemy\n            })\n        })\n\n        socket.on('update score', data => {\n            this.setState({\n                score: data[this.state.name],\n                enemyScore: data[this.state.enemyName]\n            })\n        })\n\n        socket.on('run game', status => {\n            this.setState({\n                isMyTurn: status === 'go' ? true : false,\n                isPlanningStage: false\n            })\n            let timerInterval;\n            Swal.fire({\n                title: 'Game will start in',\n                html: '<a style=\"margin-top: -20px; margin-bottom: -20px; font-size: 50px\"></a>',\n                timer: 3000,\n                timerProgressBar: true,\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading();\n                    timerInterval = setInterval(() => {\n                        const content = Swal.getContent()\n                        if (content) {\n                            const t = content.querySelector('a')\n                            if (t) {\n                                t.textContent = Math.ceil(Swal.getTimerLeft() / 1000)\n                            }\n                        }\n                    }, 100)\n                },\n                willClose: () => {\n                    clearInterval(timerInterval)\n                }\n            }).then((result) => {\n                if (result.dismiss === Swal.DismissReason.timer) {\n                    if (status === 'go') {\n                        this.setState({ seconds: 10 });\n                        this.interval = setInterval(() => this.tick(), 1000);\n                    }\n                }\n            })\n        })\n\n        socket.on('opponent timeout', () => {\n            this.setState({\n                isMyTurn: true,\n                seconds: 10\n            })\n            this.interval = setInterval(() => this.tick(), 1000);\n        })\n\n        socket.on('opponent want to pause', name => {\n            Swal.fire({\n                text: name + ' wanted to pause the game',\n                showDenyButton: true,\n                allowOutsideClick: false,\n                confirmButtonText: 'Accept',\n                denyButtonText: 'Decline'\n            }).then(result => {\n                if (result.isConfirmed) {\n                    socket.emit('pause accept', this.props.room);\n                    if (this.state.isMyTurn) {\n                        clearInterval(this.interval);\n                    }\n                    this.setState({\n                        isPause: true\n                    })\n                    Swal.fire({\n                        title: 'Paused',\n                        allowOutsideClick: false,\n                        showConfirmButton: false\n                    })\n                } else {\n                    socket.emit('pause reject', this.props.room);\n                }\n            })\n        })\n\n        socket.on('opponent accept pause', () => {\n            Swal.close();\n            this.setState({\n                isPause: true\n            })\n            if (this.state.isMyTurn) {\n                clearInterval(this.interval);\n            }\n        })\n\n        socket.on('opponent reject pause', () => {\n            Swal.close();\n            Swal.fire({\n                title: 'Rejected',\n                icon: 'warning'\n            })\n        })\n\n        socket.on('opponent resume', () => {\n            Swal.close();\n            if (this.state.isMyTurn) {\n                this.interval = setInterval(() => this.tick(), 1000);\n            }\n            this.setState({\n                isPause: false\n            })\n        })\n\n        socket.on('receive chat', msg => {\n            this.setState({\n                chatMsg: ''\n            })\n            this.state.chat.push(msg);\n            let chatbox = document.getElementById(\"chat-box\");\n            chatbox.scrollTop = chatbox.offsetHeight;\n            this.forceUpdate();\n        })\n\n        socket.on('secret key', () => {\n            this.setState({\n                secretSong: false\n            })\n            this.setState({\n                secretSong: true\n            })\n        })\n\n        socket.on('update enemy grid', payload => {\n            clearInterval(this.interval);\n            this.setState({\n                enemyData: payload.data,\n                score: payload.score,\n                isMyTurn: false,\n                seconds: 0\n            })\n        })\n\n        socket.on('update my grid', data => {\n            let newData = this.state.data.slice();\n            for (let i = 0; i < data.length; i++) {\n                if (data[i] === 2 || data[i] === 3) {\n                    newData[i] = data[i];\n                }\n            }\n            clearInterval(this.interval);\n            this.setState({\n                data: newData,\n                isMyTurn: true,\n                seconds: 10\n            })\n            this.interval = setInterval(() => this.tick(), 1000);\n        })\n\n        socket.on('missile not enough', () => {\n            Swal.fire({\n                title: 'Oops',\n                text: 'You don\\'t have enough item or already used the item in this round',\n                icon: 'error'\n            })\n        })\n\n        socket.on('used missile', () => {\n            socket.emit('update missile', localStorage.getItem('auth'));\n        })\n\n        socket.on('glasses result found', data => {\n            this.setState({\n                enemyData: data\n            });\n            Swal.fire({\n                title: 'You found a ship, Destroy them!'\n            })\n        })\n\n        socket.on('glasses result not found', data => {\n            this.setState({\n                enemyData: data\n            });\n            Swal.fire({\n                title: 'You found nothing, it is marked'\n            })\n        })\n\n        socket.on('end game', payload => {\n            clearInterval(this.interval);\n            if (payload.winner.auth === localStorage.getItem('auth')) {\n                socket.emit('update points', {\n                    auth: payload.winner.auth,\n                    score: payload.winner.score\n                });\n                socket.emit('update pocket', payload.winner.auth);\n                this.state.audio[3].currentTime = 0;\n                this.state.audio[3].play();\n                Swal.fire({\n                    title: 'Congratulations!',\n                    html: 'You <b>won</b> the game<br>Scored: <b>' + payload.winner.score + '</b> Points<br>Reward: <b>200</b> Coins',\n                    imageUrl: '/win.png',\n                    imageWidth: 256,\n                    imageHeight: 256,\n                    allowOutsideClick: false,\n                    showConfirmButton: false,\n                    timerProgressBar: true,\n                    timer: 10000\n                }).then(result => {\n                    if (result.dismiss === Swal.DismissReason.timer) {\n                        window.location.reload();\n                    }\n                })\n            } else {\n                socket.emit('update points', {\n                    auth: localStorage.getItem('auth'),\n                    score: payload.loser.score\n                });\n                this.state.audio[4].currentTime = 0;\n                this.state.audio[4].play();\n                Swal.fire({\n                    title: 'Uhh!',\n                    html: 'You <b>lose</b> the game<br>Scored: <b>' + payload.loser.score + '</b> Points<br>Reward: <b>0</b> Coins',\n                    imageUrl: '/lose.png',\n                    imageWidth: 256,\n                    imageHeight: 256,\n                    allowOutsideClick: false,\n                    showConfirmButton: false,\n                    timerProgressBar: true,\n                    timer: 10000\n                }).then(result => {\n                    if (result.dismiss === Swal.DismissReason.timer) {\n                        window.location.reload();\n                    }\n                })\n            }\n        })\n    }\n\n    render() {\n        let PlanningStage = (\n            <Row>\n                <Col>\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ borderRadius: '10px 10px 0 0' }}>\n                        <Navbar.Collapse>\n                            <Nav className=\"container-fluid\">\n                                <Navbar.Text className=\"ml-auto mr-auto\" style={{ color: 'white', fontSize: '18px' }}>\n                                    Place Your Ships ㋡\n                                </Navbar.Text>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                    <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n                        <Card.Body>\n                            <Row>\n                                <Col xs={10} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                    {this.renderPlanBoard().map(each => (<div className=\"board-row\">{each}</div>))}\n                                </Col>\n                                <Col xs={2}>\n                                    <Row style={{ width: '100%', marginBottom: '20px' }}>\n                                        <Card style={{ width: '100%' }}>\n                                            <Card.Body>\n                                                <Button variant='info' block onClick={() => this.changeAlign('hori')}>Horizontal</Button>\n                                                <Button variant='info' block onClick={() => this.changeAlign('vert')}>Vertical</Button>\n                                            </Card.Body>\n                                        </Card>\n                                    </Row>\n                                    <Row style={{ width: '100%', marginBottom: '20px' }} className=\"text-center\">\n                                        <Card style={{ width: '100%' }}>\n                                            <Card.Header>\n                                                <Card.Text>Ship amount</Card.Text>\n                                            </Card.Header>\n                                            <Card.Body>\n                                                <Card.Text style={{ marginBottom: '-20px', marginTop: '-20px', fontSize: '50px' }}>\n                                                    {this.state.shipAmount}\n                                                </Card.Text>\n                                                <Card.Text>to be placed</Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    </Row>\n                                    <Row style={{ width: '100%' }}>\n                                        <Card style={{ width: '100%' }}>\n                                            <Card.Body>\n                                                <Button variant='primary' block onClick={() => this.next()}>Next</Button>\n                                                <Button variant='danger' block onClick={() => this.back()} disabled={!this.state.controlButton}>Back</Button>\n                                            </Card.Body>\n                                        </Card>\n                                    </Row>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        );\n\n        let GamingStage = (\n            <Row>\n                <Col>\n                    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" style={{ borderRadius: '10px 10px 0 0' }}>\n                        <Navbar.Collapse>\n                            <Nav className=\"container-fluid\" >\n                                {!this.state.isPause ?\n                                    (<Nav.Link onClick={() => this.pause()}>\n                                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                                            <BsFillPauseFill style={{ marginRight: '5px' }} /> Pause\n                                    </div>\n                                    </Nav.Link>)\n                                    :\n                                    (<Nav.Link onClick={() => this.resume()}>\n                                        <div style={{ display: 'flex', alignItems: 'center' }}>\n                                            < BsFillPlayFill style={{ marginRight: '5px' }} /> Resume\n                                    </div>\n                                    </Nav.Link>)\n                                }\n                                <Navbar.Text className=\"ml-auto\">\n                                    <div style={{ marginTop: '3px' }} >\n                                        <h5>\n                                            <Badge style={{ width: '500px' }} variant={this.state.isPause ? 'light' : this.state.isMyTurn ? 'success' : 'danger'} >\n                                                {this.state.isPause ? (<>Paused</>) : this.state.isMyTurn ? (<>Your Turn</>) : (<>Enemy Turn</>)}\n                                            </Badge>\n                                        </h5>\n                                    </div>\n                                </Navbar.Text>\n                                <Nav.Link className=\"ml-auto\">\n                                    {this.state.name} : {this.state.score} Points<br></br>\n                                    {this.state.enemyName} : {this.state.enemyScore} Points\n                                </Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                    <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n                        <Card.Body>\n                            <Row>\n                                <Col xs={4} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                    {this.renderMyBoard().map(each => (<div className=\"board-row\">{each}</div>))}\n                                </Col>\n                                <Col xs={4} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                    {this.renderEnemyBoard().map(each => (<div className=\"board-row\">{each}</div>))}\n                                </Col>\n                                <Col xs={4}>\n                                    <Card border=\"primary\" style={{ width: '100%', height: '350px' }}>\n                                        <Card.Header>Chat</Card.Header>\n                                        <Card.Body id=\"chat-box\" style={{ height: '150px', overflowY: 'scroll' }}>\n                                            {this.state.chat.map(each => (\n                                                <p>{each}</p>\n                                            ))}\n                                        </Card.Body>\n                                        <Card.Footer>\n                                            <InputGroup size=\"sm\">\n                                                <FormControl id=\"chat-input\" onChange={e => this.handleChat(e)} onKeyPress={e => this.handleKey(e)} aria-describedby=\"basic-addon1\" style={{ marginTop: '5px' }} />\n                                                <InputGroup.Append>\n                                                    <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => this.send()}>Send</Button>\n                                                </InputGroup.Append>\n                                            </InputGroup>\n                                        </Card.Footer>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={8}>\n                                    <Card style={{ width: '100%', marginTop: '10px', height: '100%' }}>\n                                        <Card.Body>\n                                            <Row>\n                                                <Col>\n                                                    <Card.Title>Items</Card.Title>\n                                                    <Card.Subtitle className=\"mb-2 text-muted\">Missile quota: once per game</Card.Subtitle>\n                                                    <Card.Subtitle className=\"mb-2 text-muted\">Glasses quota: twice per game</Card.Subtitle>\n                                                    <Card.Subtitle className=\"mb-2 text-muted\"><br></br>Use them wisely</Card.Subtitle>\n                                                </Col>\n                                                <Col style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                                                    <Button variant='info' block disabled={this.state.isUsingMissile || this.state.missileAvai === 0} onClick={() => this.equipMissile()}><IoIosRocket style={{ marginRight: '5px' }} />Five-shot Missile</Button>\n                                                    <Button variant='info' block disabled={this.state.isPause || !this.state.isMyTurn || this.state.isUsingMissile || this.state.radarAvai === 0} onClick={() => this.useGlasses()}><BiGlasses style={{ marginRight: '5px' }} />Glasses</Button>\n                                                    <Button variant='danger' block disabled={!this.state.isUsingMissile} onClick={() => this.cancelMissile()}>Cancel</Button>\n                                                </Col>\n                                            </Row>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                                <Col xs={4} className=\"text-center\">\n                                    <Card style={{ width: '100%', marginTop: '10px', height: '100%' }}>\n                                        <Card.Body>\n                                            <Card.Title>Time remaining</Card.Title>\n                                            <Card.Text style={{ marginBottom: '-20px', fontSize: '70px' }}>\n                                                {this.state.seconds}\n                                            </Card.Text>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        )\n\n        return (\n            <Container style={{ paddingTop: '2%' }}>\n                {this.state.secretSong && (<iframe width=\"0\" height=\"0\" style={{ display: 'none' }} src=\"https://www.youtube.com/embed/jveH6adL5DY?controls=0&autoplay=1&loop=true\" frameborder=\"0\" allowfullscreen></iframe>)}\n                {this.state.isPlanningStage ? PlanningStage : GamingStage}\n            </Container>\n        );\n    }\n}\n\nexport default Game;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Shop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            pocket: 0,\n            missileOwned: 0,\n            glassesOwned: 0,\n            isLoaded: false\n        }\n    }\n\n    fiveShotBuy(n) {\n        if (this.state.pocket < 100 * n) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: \"You don't have enough money\"\n            })\n            return\n        } else {\n            socket.emit('buy missile', { auth: localStorage.getItem('auth'), num: n })\n        }\n    }\n\n    glassesBuy(n) {\n        if (this.state.pocket < 50 * n) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: \"You don't have enough money\"\n            })\n            return\n        } else {\n            socket.emit('buy glasses', { auth: localStorage.getItem('auth'), num: n })\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('get pocket');\n        socket.on('response pocket', data => {\n            this.setState({\n                pocket: data.pocket,\n                missileOwned: data.missile,\n                glassesOwned: data.glasses,\n                isLoaded: true\n            })\n        })\n        socket.on('response buy missile', data => {\n            this.setState({\n                pocket: data.pocket,\n                missileOwned: data.missile\n            })\n        })\n\n        socket.on('response buy glasses', data => {\n            this.setState({\n                pocket: data.pocket,\n                glassesOwned: data.glasses\n            })\n        })\n    }\n\n    render() {\n        let result;\n        if (!this.state.isLoaded) {\n            Swal.fire({\n                title: 'Loading',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading();\n                }\n            })\n        } else {\n            Swal.close();\n            result = (\n                <Row>\n                    <Col>\n                        <Card style={{ marginBottom: '10px' }}>\n                            <Card.Body>Pocket: {this.state.pocket}</Card.Body>\n                        </Card>\n                        <Row >\n                            <Col >\n                                <Card >\n                                    <Card.Body class=\"text-center\">\n                                        <Card.Img variant=\"top\" style={{ width: '40%' }} src=\"https://media.istockphoto.com/vectors/startup-icon-vector-id1074164928?k=6&m=1074164928&s=612x612&w=0&h=dD2gAKmO5MNG-eOh2WE34ZMoLSpF0j_YSYvTFKl-FfA=\" />\n                                        <Card.Title style={{ marginTop: '10px' }} >Five-shot Missile</Card.Title>\n                                        <Card.Text style={{ marginBottom: '20px' }}>Strike five squares in a cross pattern on the grid in one turn</Card.Text>\n                                        <Card.Text>Currently owned: {this.state.missileOwned}</Card.Text>\n                                        <Card.Text style={{ marginTop: '-15px', marginBottom: '10px' }}>Price: 100</Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer className=\"text-center\">\n                                        <Card.Text style={{ marginBottom: '0px' }}>Purchase:</Card.Text>\n                                        <Button onClick={() => this.fiveShotBuy(1)} variant=\"outline-primary\" style={{ width: '100px', marginRight: '10px' }}>X1</Button>\n                                        <Button onClick={() => this.fiveShotBuy(10)} variant=\"outline-primary\" style={{ width: '100px' }}>X10</Button>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n\n                            <Col>\n                                <Card style={{ height: '100%' }}>\n                                    <Card.Body class=\"text-center\">\n                                        <Card.Img variant=\"top\" style={{ width: '40%' }} src=\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-ios7-glasses-outline-512.png\" />\n                                        <Card.Title style={{ marginTop: '10px' }} >Glasses</Card.Title>\n                                        <Card.Text style={{ marginBottom: '20px' }}>Randomly unviel one square</Card.Text>\n                                        <Card.Text style={{ marginTop: '45px' }}>Currently owned: {this.state.glassesOwned}</Card.Text>\n                                        <Card.Text style={{ marginTop: '-15px', marginBottom: '10px' }}>Price: 50</Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer className=\"text-center\">\n                                        <Card.Text style={{ marginBottom: '0px' }}>Purchase:</Card.Text>\n                                        <Button onClick={() => this.glassesBuy(1)} variant=\"outline-primary\" style={{ width: '100px', marginRight: '10px' }}>X1</Button>\n                                        <Button onClick={() => this.glassesBuy(10)} variant=\"outline-primary\" style={{ width: '100px' }}>X10</Button>\n                                    </Card.Footer>\n                                </Card>\n                            </Col>\n                        </Row>\n\n                    </Col>\n                </Row>\n            );\n        }\n        return (\n            <Container>\n                {result}\n            </Container>\n        );\n    }\n}\n\nexport default Shop;","import React from 'react';\nimport socket from '../connection';\nimport Swal from 'sweetalert2';\nimport { Row, Col, Card, Button, Container, Image, Table } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Admin extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            admin: 0,\n            showRoomID: false\n        }\n    }\n\n    controlRoomID() {\n        this.setState({ showRoomID: !this.state.showRoomID });\n    }\n\n    admin(key, action) {\n        if (action === 'add money') {\n            socket.emit('add money', key);\n        } else if (action === 'kick') {\n            socket.emit('kick', key);\n        } else if (action === 'reset points') {\n            socket.emit('reset points', key);\n        } else if (action === 'reset room') {\n            socket.emit('reset room', key);\n        }\n    }\n\n    componentDidMount() {\n        socket.emit('admin authorization', localStorage.getItem('auth'));\n\n        socket.on('update admin console', () => {\n            socket.emit('admin authorization', localStorage.getItem('auth'));\n        })\n\n        socket.on('admin authorized', data => {\n            this.setState({\n                admin: 1,\n                data: data\n            })\n        })\n\n        socket.on('restricted access', () => {\n            this.setState({ admin: 2 });\n        })\n\n    }\n\n    render() {\n        let result;\n        if (this.state.admin === 0) {\n            Swal.fire({\n                title: 'Loading',\n                allowOutsideClick: false,\n                showConfirmButton: false,\n                willOpen: () => {\n                    Swal.showLoading()\n                }\n            })\n        } else if (this.state.admin === 1) {\n            Swal.close();\n            result = (\n                <Row>\n                    <Col>\n                        <Card className=\"text-center\">\n                            <Card.Body>\n                                <Button variant='light' block onClick={() => this.controlRoomID()}>Show/Hide Room ID</Button>\n                                <Table responsive bordered hover>\n                                    <thead>\n                                        <tr>\n                                            <th>Profile</th>\n                                            <th>Name</th>\n                                            <th>Points</th>\n                                            <th>Money</th>\n                                            <th>Room</th>\n                                            <th>Control</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.data.map(user => (\n                                            <tr>\n                                                <td><Image style={{ width: '80px', height: '80px' }} src={user.profile} /></td>\n                                                <td>{user.user}</td>\n                                                <td>{user.points}</td>\n                                                <td>{user.pocket}</td>\n                                                <td>\n                                                    {user.room === '' ? (<>-</>) :\n                                                        this.state.showRoomID === true ? user.room : (<>Yes</>)\n                                                    }\n                                                </td>\n                                                <td>\n                                                    <Row>\n                                                        <Col>\n                                                            <Button variant='primary' onClick={() => this.admin(user.auth, 'add money')}>Add Money (1000)</Button>{'  '}\n                                                            <Button variant='danger' onClick={() => this.admin(user.auth, 'kick')}>Kick</Button>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col>\n                                                            <Button variant='warning' onClick={() => this.admin(user.auth, 'reset points')}>Reset Points</Button>{'  '}\n                                                            <Button variant='warning' onClick={() => this.admin(user.room, 'reset room')}>Reset Room</Button>\n                                                        </Col>\n                                                    </Row>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </Table>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            );\n        } else {\n            Swal.close();\n            result = (\n                <Container style={{ marginTop: '50px', marginBottom: '50px' }}>\n                    <Row className=\"text-center\">\n                        <Col>\n                            <Image style={{ width: '20%', marginBottom: '10px' }} src=\"https://icons.iconarchive.com/icons/paomedia/small-n-flat/256/sign-error-icon.png\" />\n                            <h2>Restricted access</h2>\n                        </Col>\n                    </Row>\n                </Container>\n            );\n        }\n\n        return (\n            <Container>\n                {result}\n            </Container>\n        );\n    }\n}\n\nexport default Admin;","import React from 'react';\nimport socket from './connection';\nimport { Row, Col, Container, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Menu from './component/Menu';\nimport Lobby from './component/Lobby';\nimport Ranking from './component/Ranking';\nimport Login from './component/Login';\nimport Game from './component/Game';\nimport Shop from './component/Shop';\nimport Admin from './component/Admin';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logged = this.logged.bind(this);\n    this.state = {\n      isInGame: false,\n      joinedRoom: ''\n    }\n  }\n\n  isAuthenticated() {\n    return localStorage.getItem('isLogin') === 'true';\n  }\n\n  logged(name) {\n    Swal.fire({\n      title: \"Hello, \" + name,\n      allowOutsideClick: false,\n      showConfirmButton: false,\n      timer: 1500\n    }).then((result) => {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        window.location.reload();\n      }\n    });\n  }\n\n  startGame() {\n    this.setState({ isInGame: true });\n  }\n\n  componentDidMount() {\n\n    socket.on('start the game', roomName => {\n      Swal.close();\n      this.setState({\n        isInGame: true,\n        joinedRoom: roomName\n      })\n    })\n\n    socket.on('opponent disconnect', () => {\n      socket.emit('leave room');\n      this.setState({\n        isInGame: false,\n        joinedRoom: ''\n      })\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <Container style={{ paddingTop: '2%' }}>\n          <Row>\n            {this.isAuthenticated() ? this.state.isInGame ? (<Game room={this.state.joinedRoom}/>) : (<Home />) : (<Login logged={this.logged} />)}\n          </Row>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Col>\n        <Switch>\n          <Route path=\"/admin\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Admin />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/rank\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Ranking />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/shop\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Shop />\n              </Card.Body>\n            </Card>\n          </Route>\n          <Route path=\"/\">\n            <Menu />\n            <Card style={{ backgroundColor: '#e9ecef', borderRadius: '0 0 10px 10px' }}>\n              <Card.Body>\n                <Lobby />\n              </Card.Body>\n            </Card>\n          </Route>\n        </Switch>\n      </Col>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}